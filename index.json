[{"content":"\n![Photo by Nikita Kachanovsky on Unsplash](images/nikita-kachanovsky-445394-unsplash.jpg)\n\n这是个**更新很少，更新很慢的博主**，但请相信**Ta不会弃坑、Ta不会弃坑、Ta不会弃坑!!**   \n  \n(详细联系方式[请点这里](about.w568w.html))\n\n\u003e ## 博主存活状态指示器\n\u003e (用不怎么熟的JavaScript做的... 可以检查博主是不是弃坑了)\n\u003e \n\u003e 当前状态: \u003cdiv id=\"tips\" style=\"color:grey; border-bottom:1px solid #000\"/\u003e\u003c/div\u003e  \n\n# 任务列表\n+ 写一个[关于微积分的入门教程](https://zybuluo.com/w568w/note/1081202)\u003cspan style=\"color:green;\"\u003e(2023/02/13：更新啦)\u003c/span\u003e\n+ ~~学习，备战高考~~\u003cspan style=\"color:green;\"\u003e(完成)\u003c/span\u003e\n+ ~~写一个夜间模式App~~\u003cspan style=\"color:green;\"\u003e(已初步完成，尚未发布)\u003c/span\u003e\n+ 写一个 Android 上的 IDE  \u003cspan style=\"color:red;\"\u003e(心有余而力不足，弃坑)\u003c/span\u003e\n+ ~~写一个叫[Xposed Checker](https://www.coolapk.com/apk/190247)的App~~\u003cspan style=\"color:green;\"\u003e(基本完成)\u003c/span\u003e\n+ ~~准备期末考试~~\u003cspan style=\"color:green;\"\u003e(完成)\u003c/span\u003e\n+ 写一个叫[旦夕](https://github.com/w568w/DanXi/)的 App\u003cspan style=\"color:red;\"\u003e(进行中)\u003c/span\u003e\n+ 学习画画！\u003cspan style=\"color:red;\"\u003e(进行中)\u003c/span\u003e\n\n# 妄想部分\n+ ~~[净眼](https://www.coolapk.com/apk/149408)达到20w下载量~~\u003cspan style=\"color:green;\"\u003e(Get!但是被莫名其妙下架了 所以没法给人显摆)\u003c/span\u003e\n+ 看完《机器学习》\n- ~~学习深度学习课程~~\u003cspan style=\"color:green;\"\u003e(Get! 但是显卡太烂最后作罢)\u003c/span\u003e\n![](images/huaji.png)\n\n  \n要了解我更多？轻点下面昵称(/ ω \\\\)\n\n\u003cscript src=\"todo.js\"\u003e\n\u003c/script\u003e\n","cover":"images/nikita-kachanovsky-445394-unsplash.jpg","link":"todo-list.html","preview":"\u003cp\u003e看看这家伙最近在搞什么大新闻？\u003c/p\u003e\n","title":"博主的Todo List"},{"content":"\n![Photo by \u003ca href=\"https://unsplash.com/@goian?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText\"\u003eIan Schneider\u003c/a\u003e on \u003ca href=\"https://unsplash.com/images/events/happy-new-year?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e](images/ian-schneider-PAykYb-8Er8-unsplash.webp)\n\n距离上一次跨年又过去一年了。\n\n这一年里，我的记忆大致可以分为几个阶段：\n\n1. **1-3 月，风平浪静。** 尽管国外的疫情一波猛于一波，但得益于疫情防控政策，国内的生活基本不受影响。少数的几次核酸也只有上大学时出入上海市会要求；\n2. **4-6 月，波涛汹涌。** 几乎是刚刚三月底，上海的疫情突然就爆发了：从日增几百人、几千人到数万人，只有短短的十几天时间。学校从封校逐步加码到封寝，也难以阻挡病毒的脚步。很快，每周核酸、线上教学、寝室间轮流早起带饭成为了大学生的生活常态。这段时间里我并不怎么关注媒体和公共社区，只是在微信群和朋友圈里看到了一些同学的疫情动态，以至于后来听说「上海的精准防疫让全国人的两年苦心经营毁于一旦」之类的说法，还颇为惊讶；\n3. **7-11 月，波澜不惊。** 从 7 月底开始，疫情在上海基本得到控制，学校也陆续恢复了线下教学。从这时开始，「动态清零」一词算是正式进入了大众视野，各地很快发现给传染事件溯源的老办法在超强的 Delta 和 Omicron 变种面前已经失去了有效意义，唯一手段就是反复的、大批量的全员核酸筛查。尤其是进入了十一月，一些地区的恶性事件（包括但不限于游行示威、财政崩溃等等）让人触目惊心，倍感难以持续。好在，这学期的日常作业很繁重（**没空更新博客的原因找到了！**），我可以把自己埋进作业里，不用去关注这些事情；\n4. **12-1 月，重生。** 12 月 7 日，突然地，身边的核酸检测点随着「动态清零」政策一起如潮水退去，各地的感染高峰像洪水一样扑面而来。早在 11 日，我就预感上海不宜久留，急匆匆地逃离了这个城市。谁想「躲得过初一，躲不过十五」，随着本地高峰的爆发，终究是挂彩了：18 日，开始发低烧；19-22 日，连续 4 天的 39 ℃ 高烧；直到 25 日之后才逐渐进入康复阶段。这段时间里，我更没有太多的精力去关注各种事，更何况还有期末考试，唯一的可靠信息来源变成了百度大数据统计的疫情指数。\n\n很难形容对过去一年生活的印象，现在回想起来，它恐怕是过去三年受疫情影响最严重的一年了。我不知道这一年对各位看官的影响有多大，但我想，至少对于大学生来说，这一年，我们都在经历着一种「重生」。\n\n# 关于《零基础微积分入门基本教程》系列\n拖更了三四年时间，每天依然有小伙伴在问我什么时候更新，我也很惭愧：真的是让各位等太久了！\n\n原先的版本发布在[作业部落](https://zybuluo.com/w568w/note/1081202)上，截至写文时，已经有 8 万多阅读了。虽然没有动笔，但我一直在思考如何将这个系列继续下去，可以肯定的是：**今年一定会将这个系列更新完毕。** \n\n作业部落目前不太适合写作长文了，很多图片使用外链，也带来了很差的阅读体感。稍后，我可能会考虑将其完全迁移到**[本站](https://w568w.eu.org/calculus-1st.html)和简书**等国内平台上，请关注[作业部落](https://zybuluo.com/w568w/note/1081202)或[本博客](https://w568w.eu.org/)等平台的更新信息。\n\n\u003e 另外，新的一年我也许会购买新的域名，但目前的域名 https://w568w.eu.org/ 仍然可以长期使用一年以上，无需担心。如果担心找不到正确的博客位置，可以查看我 GitHub 上[个人主页](https://github.com/w568w)左侧的链接，或者直接访问 https://w568w.github.io/ 。\n\u003e\n\u003e 任何时候都欢迎新的[友情链接](https://w568w.eu.org/gays.html)！","cover":"images/ian-schneider-PAykYb-8Er8-unsplash.webp","link":"2023-sweep.html","preview":"\u003cp\u003e打扫心情，迎接下一年\u003c/p\u003e\n","title":"2023 和新年"},{"content":"\n\n![Photo by Gabriel Heinzer on Unsplash](images/photo-1629654297299-c8506221ca97.webp)\n本文分为两部分，第一部分阐明问题，第二部分则列出博主个人的 Linux 配置记录。\n\n---\n\n上个月把各个备受互联网推崇的 Linux 发行版试用了一遍。浅浅地发表一下个人感想。\n\n作为一个有 Linux 4 年使用史的老用户，自然也有将 Linux 完全充当日常使用操作系统的经历。从最大众的 Ubuntu、Mint，到（当时）更为小众的 Arch Linux，再到国产的 Start OS、Deepin、UOS，如果要用两个字形容 Linux 相比于 Windows 的使用体验，那就是「**折腾**」：安装要折腾分区，开机要折腾图形驱动，使用要折腾软件包源、桌面管理器、输入法、Wine……\n\n2022 年，已经有一众的 Linux 桌面版号称能给用户带来大众级的桌面体验。那么，这些平台的体验到底如何呢？\n\n鉴于互联网上吹嘘 Linux 优点的文章、视频已经多到让人审美疲劳，**本文仅限于记录部分 Linux 发行版的缺点和不足，以便帮助读者擦亮眼睛，认清现状，减少折腾。** 也希望社区不断查漏补缺，让「Linux 桌面年」别再永远是「下一年」。\n\n![Linux 桌面元年来了吗？](images/Snipaste_2022-08-25_14-37-58.png)\n\n*PS：* 当然，下文中大部分问题，都与系统环境、个人配置有关，可能你根本不会碰到，因此仅供参考。也欢迎在评论区分享你自己的 Linux 使用体验。\n\n# Ubuntu 22.04 的问题\nUbuntu 作为目前号称拥有最高支持率、最全驱动厂家支持和最活跃社区支持的发行版，自然被放在试用的第一位。\n\n## 第一次开机就报错\n第一次开机后提示系统更新。点击「立即更新」后，报错如下：\n```\n无法解决软件包依赖\n这个错误可能是需要不存在或不可安装的软件包引起的。或者可能在软件包之间有冲突，它们不能同时安装。\nTransaction failed: 无法解决软件包依赖\n 下列软件包未满足的依赖关系：\n\nlibmutter-10-0: Depends: mutter-common (\u003e= 42.2-0ubuntu1) 但是将要安装 42.2-0ubuntu1\n                Depends: libgudev-1.0-0 (\u003e= 232) 但是将要安装 1:237-2build1\n                Depends: libice6 (\u003e= 1:1.0.0) 但是将要安装 2:1.0.10-1build2\n                Depends: libsystemd0 (\u003e= 226) 但是将要安装 249.11-0ubuntu3\n                Depends: libudev1 (\u003e= 183) 但是将要安装 249.11-0ubuntu3\n                Depends: libx11-6 (\u003e= 2:1.7.0) 但是将要安装 2:1.7.5-1\n                Depends: libx11-xcb1 (\u003e= 2:1.7.5) 但是将要安装 2:1.7.5-1\n                Depends: libxau6 (\u003e= 1:1.0.9) 但是将要安装 1:1.0.9-1build5\n                Depends: libxcomposite1 (\u003e= 1:0.4.5) 但是将要安装 1:0.4.5-1build2\n                Depends: libxdamage1 (\u003e= 1:1.1) 但是将要安装 1:1.1.5-2build2\n                Depends: libxext6 (\u003e= 2:1.3.0) 但是将要安装 2:1.3.4-1build1\n                Depends: libxfixes3 (\u003e= 1:6.0.0) 但是将要安装 1:6.0.0-1\n                Depends: libxi6 (\u003e= 2:1.6.99.1) 但是将要安装 2:1.8-1build1\n                Depends: libxinerama1 (\u003e= 2:1.1.4) 但是将要安装 2:1.1.4-3\n                Depends: libxkbfile1 (\u003e= 1:1.1.0) 但是将要安装 1:1.1.0-1build3\n                Depends: libxrandr2 (\u003e= 2:1.5.0) 但是将要安装 2:1.5.2-1build1\n```\n\n这个问题**自从 Ubuntu 有「系统更新」的图形化程序以来，就从未得到真正的解决。** 每一次尝试「系统更新」，就像玩俄罗斯轮盘，你永远不知道这次更新又要爆出什么稀奇古怪的错误。\n\n而这一错误信息，即便对于有经验的用户也是非常棘手的。考虑到第一次进入桌面就「开门见山」地报错，一般的桌面用户很难对这样一个操作系统有非常高的评价。\n\n## 大批中英文混杂\n系统设置、桌面右键菜单、商店显然都没有做到完全的翻译，在各个不主要的页面上基本都是中英文参半，或者干脆报出中英文混杂的错误信息。\n\n尽管 Windows 11 在 21 年 6 月发行之初，也有过[汉化不完全](https://www.appinn.com/windows-11-insider-preview-10-0-22000-51/)的问题，但在之后的正式版中很快就补全了所有细枝末节位置的本地化语言。相比之下，Ubuntu 作为正式版发行的 22.04 版，依然大面积出现「三明治」语言页，让人不禁疑问：Ubuntu 的语言社区贡献人力真的足够吗？\n\n## 应用商店差强人意\n相比于我使用 Ubuntu 16.04 时，Ubuntu 自带的应用商店有了比较大的改观。主要在两点：\n\n1. **可以打开。** 是的，在 16.04 中，我甚至无法在不科学上网的情况下打开商店，常常展示为白屏或者直接闪退。现在？或许是添加了镜像源吧；\n   \n2. **可以安装软件。** 直到 Ubuntu 的第 20 版，我都从未成功在软件商店里安装过一个软件——它在下载时卡住，安装中崩溃，报出莫名其妙的未知错误，白屏，或者干脆在点击「安装」按钮时没有任何反应。我很高兴在 22.04 上，我*终于*可以使用它安装软件了。\n\n然而，令人恼火的问题依旧存在。例如，当我在应用商店的更新页面选择「全部更新」后，**它只更新了一半的软件，在没有任何错误提示的情况下，自己停止更新了**。而且，当我再次尝试点击「全部更新」时，**整个页面直接白屏**。关闭重开才恢复正常。\n\n即便反复这个恼人的过程几次、全部升级好后，应用商店仍继续白屏，再一次关闭重开后才显示「All Update to date」（全部最新）的字样——是的，在中文系统里仍是英文提示，即便应用商店其他文本都是中文！\n\n其他的小问题数不胜数，我甚至有些担心社区开发人员能否修复它们——**包括对部分自带软件点击「卸载」总是提示「未安装」、切换安装版本（Snap 和 APT）时白屏**，等等。\n## 高分屏效果感人\n由于显卡驱动，或者是由于窗口管理器的年久失修，Ubuntu 无法很好地支持 150% 缩放。在系统设置里只能选择 100%、200% 等整数倍窗口缩放，分数倍数的缩放则只有软件支持，非常模糊且消耗性能。在我的 15 吋显示屏上，**要么字太小无法辨清，要么字太大影响阅读。**\n\n有人说，可以自行安装 gnome-tweak，设置字体缩放比例。但是，仅仅设置字体缩放会使得按钮和其他控件的视觉大小过小，而且**部分软件（如网易云音乐）甚至都不遵循系统的字体缩放设置，而是自己决定缩放比例。**\n\n## 其他瑕疵\n零零散散的小问题还有很多，试举几例：\n\n1. 点「注销」直接黑屏，回到 Linux 终端模式，而不是「切换用户」界面。\n\n2. 部分主要应用不支持暗色模式，如 Edge、Gedit（是的，Gnome 自家出的编辑器不适配自家桌面环境的暗色模式！）。\n\n还有一些比较强迫症的，比如「应用程序」的文件夹内的项目数超过一页时，第一列的图标左半边显示不全，等等。\n\n# OpenSUSE Tumbleweed、Linux Mint 的问题\nOpenSUSE 被部分爱好者评价为「最新、最稳定的桌面操作系统」，Linux Mint 则是「最接近 Windows 的桌面体验的发行版」。\n\n然而，这两款发行版在我的笔记本上都吃了「闭门羹」。具体来说，两者都在第一步，也就是安装上就跌了跟头：**OpenSUSE 在安装界面直接控件重叠、中文字间距怪异且缺字，按钮全部无法点击，根本不能进行下一步安装；Linux Mint 则更进一步，安装界面直接黑屏，连 Live 版系统都无法进入。**\n\n我尝试了一些常见的解决办法，例如 Safe graphic 或者禁用独显，但均以失败告终。或许是天时地利人和均不沾，God (~~Linus~~) 也不想让我使用吧。\n# Deepin 20 的问题\nDeepin 作为国产发行版，也是 UOS 的公用开源版本，自然对本地化有着完全的支持，但这并不代表 Deepin 是完全有能力替代 Windows、macOS 使用体验的作品。实际上，它的问题也有不少。\n\n## 托盘体验差\nDeepin 有自己的桌面环境 [DDE](https://www.deepin.org/zh/dde/)，这很好。但在 Linux 桌面永远的痛——Wine 托盘图标上，依旧问题不断。\n\n例如，Deepin QQ 挂在后台，托盘图标一会儿就自己消失了，而实际上还在运行（重新登录提示已经登录）。这时没有任何办法，只能自行在进程管理器中寻找 Wine QQ 进程并结束。\n## UI 混乱\nDeepin 在 15 前后有过一次非常棒的 [UI 变更](https://blog.csdn.net/qq_33154343/article/details/106195055)，直接让我爱上了 DDE 的质感。但在目前的 20 版本中，或许是为了迎合大众感受，或许是为了「深度抄袭」macOS，换用了现在的 UI 风格。\n\n而这套风格，给我整体感受是：**不伦不类**。任务栏图标风格严重不统一（**黑白扁平、彩色拟物风混杂**），使用字体不抗锯齿；**任何按钮、图标均无悬停、点击动效**，只能通过是否弹出新窗口来判断是否点击上了、是否打开了相应功能；最离谱的是，默认是半透明任务栏、暗色系壁纸，任务栏和开始菜单字体颜色却默认也是黑色，你细品能不能看得见字。\n\n![Deepin 20 桌面现状](images/deepin-20.png) \n\n## 应用商店同样略有瑕疵\n虽然 Deepin 的应用商店为国人使用习惯下足了功夫，但并不意味着它已经完美无瑕。除了从很多个版本之前以来就有的「常常安装失败，且无任何错误信息」的问题，这一版本也仍未修复一些更难察觉、但一旦察觉使用体验就会打折扣的问题。\n\n例如，**在系统更新时，于应用商店下载任何软件均立刻安装失败，且点击「查看失败详情」无任何反应**。必须等到更新完成，并且重新打开应用商店才恢复正常。\n\n由于 Linux 的系统更新频率远胜于 Windows 和 macOS，很难说诸如此类的设计缺陷是用户友好的。\n\n---\n下面是第二部分，列出了个人的 Ubuntu 常用软件的配置流程，希望对执意体验 Linux 的你有帮助。\n# 个人 Ubuntu 配置过程\n## 安装 VSCode\n应用商店为 Snap 版本，性能低。到官网下载 deb 包安装。\n## 安装 Git\napt 安装。使用 Git Pull 时若提醒：\n```\n$ git pull --tags origin master\nssh_askpass: exec(/usr/bin/ssh-askpass): No such file or directory\nHost key verification failed.\nfatal: 无法读取远程仓库。\n\n请确认您有正确的访问权限并且仓库存在。\n```\n安装提示的库后即恢复正常。\n## 安装 Edge\n使用 Edge 的主要原因是我在 Windows 上也是 Edge 主力，方便同步；另一个原因是，Ubuntu 预装的 Firefox 是 Snap 版，打开速度慢不说，由于用到了沙盒机制还无法连接到外部应用程序，比如 Keepass、Gnome Extension 等。\n\n直接到官网下载即可。\n\n实际使用时，第一次登录账号后崩溃了一下，之后就没啥问题了。\n## 安装 Clash\n到 https://github.com/Fndroid/clash_for_windows_pkg 下载即可。\n## 替换软件源\n官方源问题一堆，选择了中国依然连接不上。到「软件与更新」里切换到清华源（或者别的）。\n## 安装 Onedrive\n从 https://github.com/abraunegg/onedrive 安装 Onedrive。注意查看它关于 Ubuntu 的特别安装提醒，应当安装来自 OpenSUSE 的包。\n\n还可以安装 https://github.com/bpozdena/OneDriveGUI/ 的 GUI。\n\n\u003e **注意：** 若使用 AppImage，首先要根据执行 AppImage 时的提示安装 Fuse；其次，首次运行该工具时必须通过命令行创建 profile，再导入 GUI 工具中。GUI 工具本身不支持直接创建。\n\u003e\n\u003e 详见 OneDriveGUI 的官方文档。\n\n## 安装 Keepass\n应用商店下载 `KeePassXC` 即可，注意不要选择 Snap 版。浏览器安装 `KeePassXC-Browser` 集成。\n## 安装 QQ\n使用 `Icalingua-plus-plus` 项目，初步实际体验较佳。但由于是基于 Electron，系统占用相比 Windows 原生版有过之而无不及。\n## 安装飞书\n直接去官网下载就好了。\n## 安装 uTools\n直接去官网下载就好了。\n\nuTools 安装后出现打不开的问题。根据[官方论坛](https://yuanliao.info/d/5224-ubuntu-2204/22)，安装旧版 `libssl1.1` 的 DEB 包后可解。\n## 安装网易云音乐\n直接去官网下载。\n\n安装后也出现打不开的问题。根据 https://blog.csdn.net/u010457081/article/details/124544601 的解决办法，在启动脚本中加一行命令就行了。\n\n## 调整字体大小\napt 安装 `gnome-tweaks`。在 `字体` 页面调整缩放比例即可。\n\n## 安装独显驱动以及调节亮度\n安装独显驱动很容易，装完后不能调节亮度很痛苦。根据 https://zhuanlan.zhihu.com/p/348624522 设置一下就行了。\n\n## 关闭 Bracketed paste mode\n它使得你在粘贴文本到终端时，会在首部添加类似于 `^[[200~` 的东西。根据 https://askubuntu.com/questions/662222/why-bracketed-paste-mode-is-enabled-sporadically-in-my-terminal-screen 关闭即可。\n\n---\n# 后记\n在试用了一圈主流 Linux 发行版后，我有些泄气：Linux 发行版在最近几年，大多数只能以「毫无长进」来形容。\n\n但我又安慰自己：毕竟，这是由爱好者组成的开源社区志愿开发的。没有厂家的官方驱动，没有商业的资金支持，大多数开发者都寸步难行，取得[这样的成就](http://healthnews.sohu.com/a/575728185_223764)实属不易。\n\n不过，我个人认为，**Linux 各个发行版目前最大的问题是**：发行版的数量实在太多，光是包管理器就有数十种：apt、pacman、yum、pkg、apk…… 碎片化情况比 Android 还严重，几乎每月都有新的发行版出现，又有老旧的发行版宣布停止开发。新的发行版带来了新的包格式、新的窗口管理器、新的桌面环境……需要花大量开发者的人力物力予以适配；而老的则让一部分应用程序的运行机会又消失在历史的长河中。如此下去，没有哪一个发行版真正有机会覆盖每一种需求、修复每一个 Bug、添加每一项支持，只是重复「出现——造轮子——失去资金/社区支持——倒闭」的循环，Linux 桌面系统也会一直原地踏步，无法前进。\n\n坚信 Linux 越变越好并不会让它越变越好，自由软件也不是所有问题的答案。只有 Linux 这些桌面发行版愿意抛弃各自建立的代码堡垒、联合起来，制定统一的标准，发出一致的声音，才会有厂家愿意提供驱动支持，有大众消费者愿意接受这一崭新的平台。\n\n","cover":"images/photo-1629654297299-c8506221ca97.webp","link":"ubuntu-usage-test.html","preview":"\u003cp\u003e因为它并不好用。\u003c/p\u003e\n","title":"2022 年，为什么我依然不推荐 Linux 作为日用环境"},{"content":"\n![Photo by \u003ca href=\"https://unsplash.com/@nate_dumlao?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText\"\u003eNathan Dumlao\u003c/a\u003e on \u003ca href=\"https://unsplash.dogedoge.com/?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\n](images/nathan-dumlao-ewGMqs2tmJI-unsplash.webp)\n\n嗨，各位。距离上一次更新博客已经过去了整整一年——准确地说，是一年零三个月多。毕竟我把每年必更的年度总结都鸽掉了……\n\n一年时间吧，说长也不长，说短也不短。进入大学之后的生活格外悠闲。没有繁重的作业和考试（期中季和期末季除外），相比于高中，每天的课程量也约等于零…… 但是，时间却不可思议地自我收缩了。虽然在大学生活了一年半的时间，却感觉收到录取通知书仿佛是昨天才发生的事。\n\n可能这就是所谓的 Routine 吧。重复了数百遍的同一天，和经历了数百天的生活，完全是两码事，而我现在就落在了前者中。\n\n# 生活现状\n总之呢，博主现在已经从刚进大学时懵懵懂懂的高中生「升级」为了懵懵懂懂的大学生。具体就表现在缺乏探索的热情，精通烂泥扶不上墙的精神品质，哈哈。\n\n每天忙着完成各种作业、实验和讨论，工作量上来说倒也不至于很忙，但是因为相比于疯狂压榨的高中生活，可利用的日均工作时间大大减少，所以实际上繁忙程度也差不多。\n\n不过，留给自己的时间变得很多就是了，不然我也不会有空写代码、学习感兴趣的新东西。\n\n# 为啥一直不更新？\n还记得我在 [2020 年的日志](2020-hopes.html) 里说的吗？\n\n当初因为工具问题，停更了一段时间，**而这次又是工具问题**……\n\n现在我所使用的博客构建系统「纸小墨」，由于开发者弃坑很多年，使用的模板中的第三方库已经非常老旧，被报出了一大堆 Bug……\n\n最近几周，我一直在着手升级这一块，但是苦于对前端技术了解不多，越修越烂，最后彻底坏掉不能用了。一气之下，我就把代码扔在那里摆烂了，而博客也因此一直没有更新。\n\n上周因为上海疫情严重，我们改成了网络授课，学生都只能留居寝室区，过着食堂-寝室两点一线的生活。今天上午一时兴起，又把代码扒拉出来研究研究。经过和同寝前端大佬痛苦的 Debug，终于修到了能用的地步。\n\n于是，才有了今天下午的这篇小短文的更新。\n\n**之后的话，我会尽量提高更新频率，也希望各位多多关注……我这个~~年更的~~博主吧！**\n\n# 关于《零基础微积分入门基本教程》系列\n如各位所见，这个系列是我上**高二**的时候，一时兴起写的文章。高三之后因为时间不足，基本上就没怎么更新过了，等上了大学就彻底把这事给忘干净了。（**为了避免你没看我的个人简介，再提一嘴：我现在是大学二年级。**）\n\n最近突然有很多小伙伴加我 QQ，希望了解系列的后续，也不知道是哪些好心的同学在帮我宣传。如果你们中有人看到了这篇文章，**真心感谢你们！**\n\n怎么说呢？**在大学里真正系统学习了微积分的入门知识后，现在我已经有点不忍直视我以前写的东西了……** 感觉逻辑上有点混乱，也不是很确定这些内容是否是真的对大家有用。\n\n**不过，既然承诺过要更新的，最近还是尽量多写一点，争取周更，尽快把求导的部分知识介绍完！**\n\n不过，因为视角不太一样，经过大学数学的系统训练之后，感觉自己已经很难摆脱那种满嘴「显然」「易得」「假设」「被定义为」「当且仅当」的「数学腔」了……**可能之后写的内容的画风和之前有一点点不一样，我自己都察觉不到的那种细微差别。还请大家多多包涵！**\n\n# 其他碎碎念\n有人说 2022 是 2020 too，因为今年的疫情一波来得比一波猛，大有重返 2020 之势。 当下，连上网课都已经经典复刻 2.0 版了。\n\n2020 年，我还在准备高考，坐在家里听智学网讲语数英物化生。眼下，我坐在大学寝室里，听腾讯会议讲离散数学、统计学、最优化方法……\n\n但愿我也能有 2020 那样的探索欲和勇气，去走完这一年的历程吧。\n\n![2022 年 3 月 12 日晚，摄于复旦大学宿舍楼](images/2022-fudan-dorm.webp)\n","cover":"images/nathan-dumlao-ewGMqs2tmJI-unsplash.webp","link":"2022-and-about-me.html","preview":"\u003cp\u003e关于我鸽了一年多这件事\u003c/p\u003e\n","title":"2022 和我自己"},{"content":"\n\n（以下更新于：2020年12月26日13点）  \n\n眼见着2020年还剩下几天的时光，回想这一年，真的是感慨万千。  \n  \n越是繁杂的时光，渡过后的回忆尺度就越是渺小。而2020年，简直就是如水般无声流过，待到想起，已是新年钟声临近时分。  \n\n# 2020 \n上半年的记忆是灰色的。  \n  \n还记得2019年12月31号那天，我特地熬到了凌晨零点，卡着点假模假式地写了点作业，寓意“新的一年要一直学习”。  \n（但很奇怪的是，详细的场景，到了今天却已经模糊了。就像上半年的其他记忆一样，现在回想起来都是支离破碎。只记得一些零散的片段。）  \n  \n  \n然后到了一月份。我和同学一起为期末考试做准备，并苦苦等着放假。学校期末考试之后还要上一段时间的课，美其名曰“期末讲评”。  \n20号，我们终于结束了高三上学期。收拾了半天东西，我骑上自行车，拎着大包小包回家了。  \n  \n然后，病毒的消息从武汉传来。然后，武汉封城了。  \n\u003c/br\u003e\n从未知肺炎，到新型冠状病毒，到`Wuhan-CoV`，到`2019-nCoV`，到`SARS-CoV-2`，再到`COVID-19`，病毒的真面目被一步步揭开。从回顾的角度来说，或许我们当时没必要那么恐慌。但是，我们当时一无所知。  \n  \n像其他所有重要的记忆一样，一月份底的那段时光，被奇怪地从记忆中抹去。回想起来，记得的只有电视上很多很多人恐慌的面孔、不断被渲染发酵的本地疫情信息、一天12小时循环播放的社区抗疫的嘈杂广播、菜市场里抢购一空的蔬菜、千方百计搞来的一两把白色口罩、每天疯狂跳动的疫情数字、摆在家门口的酒精消毒喷剂...  \n  \n![2020年2月15日，摄于家中](images/winter-house.jpg)\n\n二月份，网课时代开始了。第一次，我在一个完全不同的地方——家里——开始了朝七晚十二的生活。那个月里，尽管不在学校，每天的作息却一样固定：早起打卡（~~还记得一张早读照片用了一个礼拜hhh~~），上午上课，中午午休，下午再上课（通常是在床上报到），傍晚打印一天的作业，晚上熬夜写作业并钉钉拍照提交......由于家里的环境一般不太适合学习（~~尤其是我在玩手机游戏时~~），感叹“希望早点开学”是常有的事。  \n哦，二月还有一件事。2月28号，是原定高考一百天的倒计时。\u003cspan style=\"background-color:black\"\u003e(为什么要刮开？你很懂诶) 具体来说，是和同学一起做了一个百日誓师视频...往事不堪回首，休提为妙。\u003c/span\u003e   \n三月份，疫情逐渐转好。到了四月份，终于迎来了盼望已久的开学。   \n\u003c/br\u003e\n\n笑笑哭哭，高三下学期过得是如此之快，以至于过得如此波澜不惊。试卷、笔记、满天飞的作业，是我高三留下的最后念想。  \n\n高考结束后的暑假，比想象中也更加无趣。大部分时间都花在了同学聚会上，还有少许时间出去匆匆自驾游了一圈，算是给高中生活划上了一个不太圆满的句号。  \n    \n（至于高考前最后几天的经历，请[参考此页](before-ncee.html)。）\n\n---\n\n下半年和上半年完全是割裂开来的两个东西。    \n  \n![自驾前往上海途中，摄于马鞍山长江大桥](images/bridge.webp)   \n\n\u003e \t下半年的第一件大事就是收到录取通知书。想象中十分遥远的大学生活，如今已经近在眼前，让我有一种不真实感。然而拿在手里的红色信封真切地告诉我，一段新的人生旅程即将开始。回想高三，那像是一段被精致提炼的时光，除了学习以外，再难找到一件能花时间做的事，更不用说培养任何爱好了。我想到曾经听说大学生活的自由、开放、多元、独立……不禁对这样的生活充满了憧憬和希望。  \n\u003e 但事实状况往往事与愿违，最初的大学生活就让我品尝到了受挫感。我不知道我为大学生活做的准备是否充足，但是刚开学的那一段时间，我显然过得不太顺利。行程数百公里，来到一座陌生的城市，和志愿者一起搬运行李，到了在宿舍住下时，已然风尘仆仆。面对自己的生活，从未独自打点生活的我感到手忙脚乱，常常惹出一些啼笑皆非的麻烦来。但是，麻烦不止于此。在社交方面，作为一个不善言语、又不曾有过广泛爱好的人，在新的学校结交新朋友同样困难重重。大多数情况下，我只能看着旁人结伴出游，听着他人聊着完全不熟悉的话题，而未曾有过加入他人行列的勇气。在大学的第一个月，我几乎都是以这样的懵懂心态度过。  \n\u003e （———摘自期末作业之一）\n\n而当下毛手毛脚地处理DDL的日子，更让忙里偷闲的我怀念起高中的日子来。想念高中阳台上的三国杀局，想念高中的上课节奏，想念高中融洽的同学关系....  \n下半年比上半年过得更轻松，也更累。\n\n\n要是让我给2020一句话作为终结的话，我觉得这句不成诗意的话是——  \n  \n**漫长而短暂的一年又一年。**\n\n---  \n（以下更新于：2020年12月31日23点）  \n  \n离跨年不到一个小时。室友们在联机打`xBox`，高中同学们在看B站跨年晚会直播消遣；我一边听歌，一边慢吞吞地在笔记本上打着字。  \n眼前，我编织不出什么诗一样的语言来形容现在的心情，因为它与平时晚上似乎没什么两样——当然嘛，「跨年夜」作为人为规定的历法、人为规定的计时方式、人为规定的时区制度之下的人造事件，本身确实没有太多的天然意义。  \n  \n但它确确实实联系起了每一个人，最终酝酿出了一种属于人类的集体情愫。在这样的一个日子里，你吃的每一种食物、走过的每一条街、路过的每一个行人，在你的记忆里，仿佛都拥有了与众不同的含义——更难怪我会写这么一篇短文来记叙一年的时光了。人之所以为人，有一部分原因可能就是拥有这样完全熟悉而陌生的时空体验吧。  \n  \n说回我自己。上海的冬天比想象中要冷，虽然只有零下几度，但是海风阵阵劲吹下，依然有身处北方的寒冷。\u003cspan style=\"background-color:black\"\u003e在这样的天气里，想扫除困意而静下心来复习也是一件困难的事。事实上，面对期末只有十几天的事实，我确认自己还没有做好充足的准备...\u003c/span\u003e  \n  \n无论如何，想想停停地写到这里，已经是23:30了。  \n还有半个小时，人类格里高利历法在东八时区即将迎来一个新的轮回。   \n\n\u003ciframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2\u0026id=434902428\u0026auto=0\u0026height=66\"\u003e\u003c/iframe\u003e  \n\n2021，欢迎！\n\n---\n（以下更新于：2020年12月26日13点）\n\n# 2021\n新的一年就在眼前，我又有怎样的期望呢？我不太清楚。  \n我甚至不敢确定我是否敢于期望。毕竟，对2020的期望如此美好，而它却如此震撼。我不敢再有什么「非分之想」。  \n总之，2021要来了。就像每一个过去的一年一样，纵使时间流逝，有些东西是不会变的。  \n\n  ---\n2021，你好。  \n\n![Photo by Yohan Cho on Unsplash](images/yohan-cho-Mwvhyd22Lyw-unsplash.webp)","cover":"images/yohan-cho-Mwvhyd22Lyw-unsplash.webp","link":"2021-future.html","preview":"\u003cp\u003e时间似水如月，捉摸不定\u003c/p\u003e\n","title":"2021年，一年又一年"},{"content":"\n进入大学生活有一个月了。  \n在上海这座城市，在复旦这所大学里，我看到了很多，学到了很多，比之前三年的高中生活还要多得多。    \n之前常常听到老师或家人说些什么「进入大学你就轻松了」，原来事实却完全不是如此。  \n\u003c/br\u003e\n大学的生活，比想象中要精彩，比想象中更无趣。\n\n---\n# 自由？\n进入大学的第一感觉就是：真tm的自由！   \n\u003c/br\u003e \n没有人再管你上课听不听、玩不玩手机；  \n没有人为了你的作业迟交忙个不停；  \n没有人监督你几点起床，几点休息；  \n没有人为你通宵打游戏找你的茬；  \n...  \n\u003c/br\u003e \n听起来十分美好？的确，这样的自由，对高中生来说是一种奢望。  \n被高中体制下的生活压迫太久了的人，面对这种自由时的心情，大概只有两种：一是狂喜，二是惶恐。  \n刚刚接触大学生活时，只要渡过最开始的不适应期后，大多人表现为前者——毕竟，课业任务不是太重，学起来也还算轻松。  \n刚刚爬出了防沉迷系统的坑，和同学整天LOL、彻夜打桌游，似乎是一种新入大学的常态。我身边有些同学也在这么做。  \n\u003c/br\u003e \n当然，也有的人表现为另一种完全相反的心态——惶恐。  \n\u003c/br\u003e \n一些人害怕自由，正如在笼子里关久了的鸟儿害怕天空。  \n除了上课外，纯粹自主掌控的碎片时间，和尚不成熟的自我管理能力、空虚的时间规划形成了巨大的矛盾。这让他们不知道自己的手脚该往哪里放。  \n当惶恐成为占据心理的主导因素时，心里就容不下别的事情了。  \n\u003c/br\u003e \n看书？看不进去。  \n写作业？难到不想写。  \n学习？书都不想拿起来。\n...  \n\u003c/br\u003e \n开学时令人紧张兴奋的新鲜感会很快被时间磨平。  \n\n\u003e 他想，大学怎么可能这么闲呢，有那么多事等着自己去做呢。至少，他要“把中学时没精力、没能允许做的事情做一做”，“买了没看的书抽出时间读一读，每周都去独立影展或者电影资料馆看些好电影，再或者是学一门第二外语”。但进入大学后，这些打算“作为既不重要也不紧急的事情在to do list的地位不断下滑，以至于到最后几乎化成了心底的一道白月光”。  \n\u003e   \n\u003e ——《三联生活周刊》\n\n然后剩下什么呢？————空虚。  \n  \n自己好像整天无所事事，想要去做些什么，但又抓不住。他们生活得恰似《鼠疫》中描写疫中城市的人们：只是在钟表上行走时间而已。  \n而身边的声音又会加剧这种焦虑：A同学已经当上了某协会理事，B同学昨天代表学校参加演讲比赛，C同学在迎新晚会上出演压轴节目...  \n反观「闲得蛋疼」的自己，又愈发感到「我不能再闲下去了」。  \n有人说：\n\n\u003e 高中，累并快乐着；大学，忙却迷茫着。\n\n值得讽刺的是，自由，正是多数人高中时的愿望。  \n  \u003c/br\u003e \u003c/br\u003e \n我就是第二类人。\n\n# 光环？ \n人们总是把有名的大学资历看作「好生活、好工作、好人生的敲门砖」，以至于为名校加上光环。  \n然而，说真的，光环也只是虚无的头衔而已。在「社会化内卷」的时代，从名校走出来的学生，面临的是一个竞争激烈程度毫不逊于一般211、985高校学生的社会。  \n复旦每年招生 3.5k+ 人，每个人都能成功毕业么？都能找到合适的位置么？扯淡。  \n你是复旦，他是上交，从北边还飘来清北的大佬，浙大也来抢社会职业资源....  \n无论走到哪里，你我都不大可能成为「第一」，总有比你强100倍、简历也好看100倍的人。  \n除非你是真的「卷」。  \n有人讽刺「Involution」是一个被误用的、甚至被污名化的词语。但是，说真的，只有深入大学环境，我才明白什么是「绩点为上」，什么是「卷」。  \n\n\u003e ......描述的现象在清北存在，在我们这所“红专并进，理实交融”的学校更是普遍。比如，我们学校的同学总是将“科”挂在嘴边，但是并没有“学”，这是个形容词，表示一位同学很在意GPA，三句话不离4.3，而且对高绩大佬极度崇拜，但是对于知识本身的热情可能并不大，甚至只愿意学考试要求的；再看向其他地方，就我潜水的数个社团来看，活动寥寥无几，水来水去就只有那几位活跃的同学，且GPA，给分等字眼也像幽灵一样萦绕在上方；学校里也有奇怪的鄙视链，似乎出国的一定是大佬，保研的只能说没有太浪，考研工作的仿佛就抬不起头来；评课社区上，评分高的一定是老师给分好的，如果老师讲得还可以，就能封神了，但是给分不是很宽松甚至比较rigid，那一定会被同学喷的体无完肤，给差评......那除了GPA，还有什么呢？对于我们这种基础学科占大头的学校，那就是科研了。  \n\u003e ——中国科学技术大学 分子物理和核物理系学生 @冯 施特劳依\n\n从头说起。尽管我的大学生活才启程一个月，但我已经开始学会每天跑去图书馆“蜗居”学习了。  \n图书馆，当然永远是座无虚席：有人在用 Word 赶论文，有人在一大摞极厚的学科书中翻找，还有人对着笔记沉思...  \n一种极压抑的气氛，好像明天就要高考一样——说实在，[高考前](/before-ncee.html)也不过如此。  \n  \n当你开始大学学习时，你才会发觉：什么光环，只不过是更高层次的内卷罢了。  \n名校，真的只是一个高手与高手对决的角斗场。\n\n# 生活...\n大学生活是在湍急的水流中艰难维持航线的航行。  \n贴一份我自己的时间表：\n\n```python\n6:40 起床\n7:00 晨跑\n7:10 早餐\n8:00 上课\n11:35 下课\n11:55 午餐\n12:10 回寝室\n13:30 上课\n15:10 下课\n15:25 到图书馆自习\n18:00 离开图书馆\n18:30 晚餐\n19:00 到教学楼自习\n20:30 离开教学楼\n21:00 洗漱\n22:00 游戏/编程\n24:00 睡觉\n```\n\n每天都是相同的 Pattern 。  \n说实话，我觉得宁愿忙起来，也不要闲下去。  \n写到这里，实在没啥继续写下去的动力了。  \n  \u003c/br\u003e\n或许这也是一种大学新生的表现？  \n但愿我的大学生活会好起来。\n\n---\n\n谢谢阅读。","cover":"images/fudan.webp","link":"what-college-taught-me.html","preview":"\u003cp\u003e大学的生活，比想象中要精彩，比想象中更无趣。\u003c/p\u003e\n","title":"大学教会了我什么"},{"content":"\n# 写在前面的废话\n今天，繁重的开学前任务终于告一段落了。  \n然后为了庆祝（？）此事，特地把原先无比缓慢的`CloudFlare`忍痛换成了付费`CDN`。  \n这个`CDN`不仅**免备案**，而且有国内直连线路，网站加载起来跟原来相比真的是呼呼的~ ~~果然充钱才能变得强大...~~    \n\u003c/br\u003e\n除此之外，它最大的优点在于**巨特么便宜**！`1GB`流量才1块钱，1块钱啊...  \n纵览国内外各种`CDN`动辄一个月成百上千的费用，这个真的是非常香了。   \n\u003c/br\u003e\n`CDN`名叫`Node Cache`，支持欧美/亚太/中国线路无缝切换，熟悉网站的朋友应该略有耳闻。他们最近在搞新人注册送**100G无门槛流量**活动，  \n[用我的邀请链接注册](https://console-api.nodecache.com/f?aff=rz1q04)可以**多拿500G流量**!  \n（虽然有恰饭嫌疑，但是确实可以拿到啊QAQ） \n\n![Node Cache 宣传图](images/nodecache-banner.webp)\n\n# ATRI总评\n言归正传，不能被广告带跑了...  \n\u003c/br\u003e\n先贴一段来自[萌娘百科](https://zh.moegirl.org.cn/ATRI_-My_Dear_Moments-)的游戏介绍：  \n\n\u003e 《ATRI -My Dear Moments-》是由 ANIPLEX.EXE 和 Frontwing、枕社(The pillow) 共同制作，并由 ANIPLEX.EXE 发行的一部人机恋题材的视觉小说游戏。于 2020年6月19日 在Steam平台和DMM平台上同步发售。\n\n \n尽管我Galgame玩得非常少，但是我也知道AI人机恋已经是一个老得不能再老的题材了...  \n\u003c/br\u003e\n就日本方面来说，比较早的动画作品有2000年的[《人形电脑天使心》](https://zh.moegirl.org.cn/%E4%BA%BA%E5%BD%A2%E7%94%B5%E8%84%91%E5%A4%A9%E4%BD%BF%E5%BF%83)、2002年的[《最终兵器彼女》](https://baike.baidu.com/item/%E6%9C%80%E7%BB%88%E5%85%B5%E5%99%A8%E5%A5%B3%E5%8F%8B/3224767)等。  \n即便在中国，也有[台湾奥尔资讯](http://www.auer.com.tw/)制作的《恋爱物语：我的机器人女友》Galgame游戏（发行年份不可考，根据安装包的`Apache Ant`构建版本判断在`2007年`左右）。  \n\u003c/br\u003e\n因此，我很怀疑`ANIPLEX.EXE`——作为一个刚刚成立不到一年的工作室——在这方面炒冷饭还能炒出什么东西来。刚开始游戏时，也就是抱着 Steam 好评99%+ 以及「原画不错」的印象去玩的，权当消磨时间。  \n\u003c/br\u003e\n\n---\n\n（温馨提示：下面有少量剧透，**不影响游戏体验**！）  \n\n开头的剧情非常平淡，也就是捡到个张口就喊男主角「主人」的少女机器人——ATRI（亚托莉）。  \n然后就埋下一个巨大Flag——亚托莉不能和男主一起生活太久。  \n然后就是「阿西莫夫机器人三原则」的介绍。  \n然后疯狂发糖发到齁。   \n\u003c/br\u003e \n这样的开头基本上是所有人机恋题材的共性了，~~除了亚托莉很可爱之外，~~ 没什么可圈可点的...  \n![沉睡的亚托莉](images/ev003bl.webp)  \n![苏醒的亚托莉](images/ev003el.webp)\n\u003c/br\u003e \u003c/br\u003e \n不过剧情越到后面，越能展现出这部作品的魅力所在，越让我刮目相看——**人机之间的感情还能这么写**！  \n\u003c/br\u003e\n直至迎来第一个转折点——男主发现日志，让我对它的评价直接上升为「**大作**」（也可能是我同题材游戏玩得太少了QAQ）。这样的情节转折，是我在之前的各种作品中很少见到的。  \n\u003c/br\u003e \n一般的人机恋爱主题作品里，常常花很大的篇幅渲染机器人的感情有多么发达、多么完善、多么与人类接近，人类又有多么痴情、多么热爱....，**而《ATRI》却展现出了另一种剧情的可能性**。（至于究竟是怎样的发展，请自行探索，在此不多剧透啦）  \n\u003c/br\u003e \n同时，我也很担心往后的情节是否会一落千丈，或者至少因为前期情节太冲击而让我失去对后期的兴趣。  \n\u003c/br\u003e \n不过果然这个作品的结尾还是没有让我失望。无论是`Happy end`的激情、`Bad end`的崩坏还是`True end`的感动，都帮助我找回了曾经玩 Galgame 大作的感觉...  \n\u003c/br\u003e \n\n---\n[Bad End 的 亚托莉 CG](images/ev019bl.webp)（防剧透，**图片容易引起生理不适**，请谨慎观看）  \n（~~但是说实话我超喜欢这张CG！~~）\n\n---\n\n\u003c/br\u003e \n\u003c/br\u003e \n而最近的 Galgame ，越来越偏向于「成人向」、是游戏就必加色情内容的趋势，有些甚至有着一言不合就上床的神奇情节，好像不来点颜色就不算 Galgame 一样。    \n\n这样的 sex 情节当然一时间很吸引眼球，还能骗到大把新玩家，但是很容易造成内容的同质化，玩家也容易产生「过饱和」的审“色”疲劳心理而下降对 Galgame 的兴趣程度。  \n\n除此之外，这样的趋势也会给大众造成「Galgame 就是色情游戏」的片面误解，只会让 Galgame 的路越来越窄。  \n\n\u003c/br\u003e\u003c/br\u003e\n《ATRI》就是这样一部在如今的清一「色」的Galgame中让我耳目一新的一个「全年龄向」作品，让我重新拾起了对视觉小说的热爱。\n\n![Eden 中的斑鸠夏生与处于「某状态」的亚托莉](images/ev012bl.webp)  \u003c/br\u003e\n\u003cfont size=2\u003e(「某状态」是啥？————自己去玩就知道啦ww)\u003c/font\u003e  \u003c/br\u003e\u003c/br\u003e\n总之，如果让我给这部作品评价，我觉得完全可以称为「**神作**」。无论是有挖掘空间的剧情深度、另类末世的故事背景还是艺术性的命运巧合，抑或是游戏本身的画质和背景音乐，都达到的很高的水准。  \n\n\u003c/br\u003e\n如果你从未玩过Galgame，或者对Galgame失去了信心，不妨体验一下这款“炒冷饭”作品带来的新的感动。  \n\u003c/br\u003e\n这款作品目前在 [Steam](https://store.steampowered.com/app/1230140/ATRI_My_Dear_Moments/) 上可以买到PC正版，**自带官方简体中文**（包括CG也是中文）。   \n\u003c/br\u003e\n如果你没有钱钱或者没有电脑，网上也有 Android 移植版资源。这里就不直接贴链接了，支持正版！\n# 尾声\n最后以本作的名言作结吧：   \n\u003ccenter\u003e\u003cfont size=5\u003e「在日渐沉没的世界里，我找到了你。」\u003c/font\u003e \u003c/center\u003e\n\u003c/br\u003e\u003c/br\u003e\n\u003ccenter\u003e\u003cfont size=5\u003e「时间停止吧，你是多么美丽——」\u003c/font\u003e \u003c/center\u003e ","cover":"images/atri-wp.webp","link":"atri-galgame.html","preview":"\u003cp\u003e无剧透评价，放心观看\u003c/p\u003e\n","title":"《ATRI -My Dear Moments-》通关后感想"},{"content":"\n![图片来源:https://www.zcool.com.cn/work/ZMjkzMTA1Mg==.html](images/gaokao.jpg)  \n  \n今天，我得知了自己的高考考场位置。 \n   \n很幸运，我在自己的学校考试——这意味着可以省去很多不必要的麻烦。我大大松了一口气。  \n  \n看身边的同学，有的愁眉苦脸，有的兴高采烈，都躁动成一团。愁眉苦脸的，想必是分到了号称\"本地最差条件考场\"的 SQ 中学：桌椅破旧得像解放遗物，整个教学楼就一个厕所，考场考务人员还不喜给外校考生好脸色看。  \n  \n据说去年有个本校女生在那里考试，因为身份证没带，一时又不能补办，被该校老师斥责哭了。当然，最后她考得也很差。\n  \n身边的同学依旧在闹，嘈杂混乱。  \n  \n不过，幸好，幸好，这些都与我无关了。我是这么想着的。\n  \n---\n  \n下文更新时间:2020年7月2日23点\n  \n# 4天\n当我写下这些文字时，正是深夜11点40分，离高考还有四天。  \n  \n  \n有人问我高考前是什么感受？  \n  \n超级紧张？激动？惶恐？晚上辗转反侧睡不着？  \n  \n都不是。  \n  \n是平静和茫然。  \n  \n当这场号称是人生最重要的考试，真正来到你面前时，当万千考生口耳相传的\"千军万马过独木桥\"之后，终于轮到你上独木桥时，你已经没有什么感觉了。  \n  \n独木桥在前面晃悠，你在岸边走。你知道，你迟早要过去的——你可能过得很优雅，也可能过得很狼狈；你可能会被同行人挤下桥，也可能把身边的一切都甩在身后。不管你怎么想，你终究要走上去。  \n  \n经历无数次考试，号称被考得最焦的高三学生，面对考试这件事，已经麻木了。  \n  \n《高考必刷题》上有一段话说得不错[\\[2\\]](#2):  \n  \n\u003e 高考  \n\u003e 无非就是很多人做同一张卷子  \n\u003e 然后决定去哪座城市  \n\u003e 做什么工作  \n\u003e 今后和谁相知  \n\u003e 和谁一起旅行  \n\u003e 和谁走一辈子  \n\u003e   \n\u003e 不管结局如何  \n\u003e 那些熬过的夜  \n\u003e 刷过的题  \n\u003e 吃过的苦  \n\u003e 会铺成一条宽阔的路  \n\u003e 带你去你想去的地方  \n  \n---\n  \n   \u003cbr /\u003e\n下文更新时间:2020年7月3日22点  \n   \u003cbr /\u003e\n    \n# 狂欢\n今天，离高考还有3天，离学校停课还有2天。明天是我们正常上课的最后一天。       \n   \u003cbr /\u003e\n按理来说，今天也可以算作是毕业的\"前夜\"了。对于高中生活最后的时光，就算没有给老师的鲜花和掌声，至少也该有些有纪念意义的东西吧？  \n  \n——记得初中毕业的时候，我们流泪，我们拥抱，我们互赠同学录，互相留下姓名，承诺着\"一定不要忘记\"之类的幼稚的话……  \n   \u003cbr /\u003e\n   \u003cbr /\u003e\n然而事实是——**我们  _什么_ 也没有做**。  \n   \u003cbr /\u003e\n不知是心理和生理都太累了，还是什么别的原因，总之我们确实什么也没有做。  \n   \u003cbr /\u003e\n语文老师的课照常不听。  \n   \u003cbr /\u003e\n数学老师的课上继续写作业。  \n   \u003cbr /\u003e\n物化生课上发呆。  \n   \u003cbr /\u003e\n至于英语老师的课上，后排同学唠嗑的声音都快盖过老师的大嗓门了。略微发福的老师也不恼，就笑眯眯地看着我们继续讲卷子。  \n   \u003cbr /\u003e\n丝毫没有面对高考的紧张，一切都像是离高考还有两三年的样子。  \n   \u003cbr /\u003e\n   \u003cbr /\u003e\n不过，确实有一些改变发生在我们当中。  \n  \n傍晚，吃完有史以来在学校食堂吃的最豪气的一顿晚饭——毕业前要把饭卡里的钱刷光——之后，我和同学一边聊着特朗普能不能连任、肖战还能捞多少钱等等与高考毫无关系的话题，有一搭没一搭地回到教室。  \n  \n还没走到教室跟前，就听到了欢笑声，推门一看：  \n后排几个同学在对象棋残局指指点点，前排几个平时不大说话的女生在纸上下五子棋，阳台上一群人围坐着打三国杀身份局……   \n  \n他们真的对游戏本身感兴趣吗？或许是。不过我想，最主要的，大概是对即将到来的高考的压力的逃离，以及对同学回忆的创造吧。  \n  \n这段时间我们实在考了太多的试，有太多的错题，想了太多的心事。游戏，是解脱，是逃避，是释放，是回忆：现在不玩，以后想作为高中生的身份再聚一起，还有可能吗？\n   \n愈发减少的高考倒计时牌下，是愈发躁动的心灵。\n  \n我加入了狂欢。\n  \u003cbr /\u003e\n   \u003cbr /\u003e\n    \u003cbr /\u003e\n     \u003cbr /\u003e\n 晚自习时，班主任把我叫到阳台，祝贺我获得了本校高考的buff，又语重心长地跟我叮嘱了很多:不要贪凉，注意饮食，不要像Z同学和X同学一样在高考前受伤生病……讲了很多才让我离开。  \n  \u003cbr /\u003e\n   \u003cbr /\u003e\n  离开阳台时，我心里一阵酸楚——这个40多岁就谢顶的中年男人，大概再也无法叫我上黑板写数学问题的解答了。\n  \n\u003ciframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2\u0026id=458004314\u0026auto=0\u0026height=66\"\u003e\u003c/iframe\u003e\n\n  \n---\n  \n   \u003cbr /\u003e\n下文更新时间:2020年7月4日22点  \n   \u003cbr /\u003e\n    \n# 序幕 \n  \n今天是我们上课的最后一天。\n \u003cbr /\u003e\n  \u003cbr /\u003e\n7:30到学校。放下书包，我们就迷迷糊糊地开始了告别之旅。   \n \u003cbr /\u003e\n我知道小学生再见时的懵懂天真，知道初中生告别时的热泪盈眶，也知道大学生毕业时的激情飞扬。\n \u003cbr /\u003e\n 但是高中生与这三者都不同：我们早已经脱离了动辄哭鼻子的年龄，也远未达到大学生那样可以成熟而含蓄地表达感伤的思想水平。\n  \u003cbr /\u003e\n 再者，在依然沉闷的试卷评讲和考前指导中，我们的伤感又被再一次冲淡。\n  \u003cbr /\u003e\n  \u003cbr /\u003e\n 所以，戏剧性的是:**我们  _仍然_ 什么也没有做**。  \n \u003cbr /\u003e\n \u003cbr /\u003e\n 不过，各科老师一点点地，帮我们找回了这种情感。\n \u003cbr /\u003e\u003cbr /\u003e\n 首先是英语课。英语老师直接放弃了今天上午最后一节课上课的机会，让我们自由地听音乐。我们争相上去点歌，几个同学差点打起来，给我们最后的高中校园生活增加了一点笑意。\u003cbr /\u003e\u003cbr /\u003e\n 最后他说，抱歉，让你们三年，啊不，两年半都摊上了这样一个英语老师。(高一下学期重新分班。)\n \u003cbr /\u003e\n 气氛突然变得伤感，我们拼命地鼓起掌来，意图打破这种毕业前的歉意和尴尬。我们看着他微笑着退场。\n \u003cbr /\u003e\u003cbr /\u003e\n 然后是语文老师。三年来她第一次没有拖堂，读完两篇高考范文，下课时一句祝愿，扬长而去。\n \u003cbr /\u003e\u003cbr /\u003e\n 再者是物理老师。平常一口流利的方言的他，却在祝福我们高考顺利的时候，用起了标准的普通话。五十多岁的中年男教师，扭扭捏捏的，像个二十几岁的小伙子。\n \u003cbr /\u003e\u003cbr /\u003e\n 化学老师临走时开玩笑说，高考考砸了，可不要把责任怪到我头上啊。\n \u003cbr /\u003e\u003cbr /\u003e\n 生物老师一反常态地没有表示[\\[3\\]](#3)，或许是一天的课上得太累了，她一脸疲惫的来，又一脸疲惫的走。\u003cbr /\u003e\u003cbr /\u003e\n 一天的课结束了。我暗自思忖:我们的心情该是如何？难过，悲伤？\n \u003cbr /\u003e\n 突然想到一句诗词：\n \n \u003e 此去经年  \n \u003e 应是良辰好景虚设\n\n不由得吟咏出来：便纵有千种风情，更与何人说？\u003cbr /\u003e\n ……\n \u003cbr /\u003e\u003cbr /\u003e\n 晚自习时，数学老师聚精会神地在笔记本电脑上打字，不时还敲两下鼠标。\u003cbr /\u003e\n 他或许是在为明天的最后一次班会准备PPT，又或许已经在为下一届高一制作课件。\u003cbr /\u003e\n 我不禁想到——送走了我们，他终会迎来下一届新的高一学生，下一批崭新的面孔，下一群性情各异的学生……\u003cbr /\u003e\u003cbr /\u003e\n对老师来说，三年是一个周期。一届又一届，在高一与高三之间回荡。\u003cbr /\u003e\n我们只是他们人生中的过客，三年匆匆而来，又匆匆收拾离去。\u003cbr /\u003e\n人生如逆旅，我亦是行人。或许他们也是我们人生中的过客，只是，我们没法再陪伴他们走完下一程了。我们就要离开了，在离开之前留下最后的终章。\u003cbr /\u003e\u003cbr /\u003e\u003cbr /\u003e\n高中的结局奏罢了。\u003cbr /\u003e\u003cbr /\u003e\n高考的序幕拉开了。\u003cbr /\u003e\u003cbr /\u003e\n\n![今晚学生收拾学校物品回家时，校门口拥挤的家长](images/school-gate-night.jpg)\n\n  \n---\n  \n   \u003cbr /\u003e\n下文更新时间:2020年7月6日12点  \n   \u003cbr /\u003e\n    \n# 前夜 \n  \n明天是高考了。\u003cbr /\u003e\u003cbr /\u003e\n\n昨天上午，我们参加了最后一次班会。  \n   \u003cbr /\u003e\n一大早到校，班主任反常地主动放起了音乐————平常，他是最反对这些“扰乱心思”的东西的。  \n   \u003cbr /\u003e\n   发下准考证、毕业照、健康承诺书，他打开了临时赶做的PPT。白底黑字，内容很简单，就是一些考前注意事项。\n      \u003cbr /\u003e\n   然后，他简单交代了一些东西：考试应急处理，考后日程表，还让我们抄下了班级QQ群号。\n      \u003cbr /\u003e\n\t  我们默默听着。\u003cbr /\u003e平素这些老生常谈的东西，如今看来，如此珍贵。\u003cbr /\u003e班会一结束，我们就彻底与高中时光说再见了。\n      \u003cbr /\u003e\n\t7点半到8点半，一个小时的光阴流水而逝。\n\t\u003cbr /\u003e\u003cbr /\u003e\n\t末了，他扫视了一下我们所有人，好像在努力记住每个人的相貌。我们都沉默不语：仿佛经历生离死别，此时此刻，一切都在无言中。\n\t\u003cbr /\u003e\n\t最后，他郑重叮嘱道[\\[1\\]](#1)：\n\t\n\u003e “你们是理科生，以后免不得有人要搞科研这条路。  \n\u003e  \n\u003e 所以，一定一定要记住的是：**诚实、善良**。这比你有多大成就都重要。  \n\u003e \n\u003e 你们要知道这句话：**越聪明的人越危险**，他/她一动歪脑筋，对国家、对社会的危害都更大。  \n\u003e \n\u003e 社会首先看你的人品道德，然后看你的知识水平，等你们进入社会马上就知道了。  \n\u003e \n\u003e ————还有一件事，**一定一定要热爱祖国**。你看看，你们以后要深造，可能有人要出国留学发展。  \n\u003e \n\u003e 好多留学生在外国待久了，把家都忘了！**你们不能忘掉中国，一定要回国作贡献**！\n\n\u003cbr /\u003e      \u003cbr /\u003e      \u003cbr /\u003e\n\n\n\n今天上午，写了一张语文卷，一张理综卷。\u003cbr /\u003e简单批改了一下，成绩并不好。\u003cbr /\u003e下午要看考场，而我还在这里慢吞吞地打字。\u003cbr /\u003e父母劝我最后一天放松一下，但我到现在还没复习错题。\u003cbr /\u003e班级QQ群沉闷，无人说话。\u003cbr /\u003e\u003cbr /\u003e\n各种事情冲向我，但我并无所谓。\u003cbr /\u003e\u003cbr /\u003e彼方在前，\u003cbr /\u003e前夜无梦。\n\n**(完)**\n\n---\n  \n   \u003cbr /\u003e\n下文更新时间:2020年7月27日8点  \n   \u003cbr /\u003e\n  \n# 后记：彼方\n\n昨天上午10点11分，高考成绩出榜了。  \n \u003cbr /\u003e\n23日，起床之后整个人烦躁不安。我在烦躁什么？或许是在担心高考成绩吧。  \n当初高考之后，估分的场景历历在目。对一题，心就凉半截；对到一半，简直没劲再对下去了。只想把手机扔掉，趴上床大哭。   \u003cbr /\u003e   \u003cbr /\u003e\n但是分还是要面对的。10点左右，爸妈坐在客厅看电视，我在卧室里一个人对着新笔记本电脑发呆。电视上正播放着高考专题，主持人正讲解着今年安徽省控分数线，还夹杂着采访学生、新闻发布会的嘈杂声。   \u003cbr /\u003e  \n抱着一种似乎无所谓的心态，我假装随意点开了高考分数查询页面。不知怎么的，平时开个百度都懒得打字的我，那串复杂的网址，却输得那么熟练。   \u003cbr /\u003e   \u003cbr /\u003e\n望着那个橙色的查询网页，我有点胆怯。从抽屉里翻出了十几天未见的高考准考证，颤抖着手指快速输入信息，希望手的速度能超越大脑关掉网页的愿望。   \u003cbr /\u003e   \u003cbr /\u003e\n输完验证码，我毅然决然地按下查询。   \u003cbr /\u003e\n那一刻，我想到了很多。我想到前一天我们尽情玩乐的同学聚会，想到离交卷还有三分钟，仍有两道大题未完成的高考数学，想到我那惨不忍睹的估计分数……   \u003cbr /\u003e   \u003cbr /\u003e\n祈祷吗？我没有祈祷。现实毕竟不是影视作品，不会在关键时刻自动放慢速度，也没有扣人心弦的慢动作瞬间。   \u003cbr /\u003e\n   \u003cbr /\u003e\n   事实上，好笑的是，回应我的是屏幕上五个简单的字：   \u003cbr /\u003e   \u003cbr /\u003e\n   “验证码错误”   \u003cbr /\u003e   \u003cbr /\u003e\n诧异，但同时又松了一口气。我关掉提示框，重新输入验证码，依然是这5个字。   \u003cbr /\u003e   \u003cbr /\u003e\n如同临刑的犯人在受刑前一刻听到大喊“刀下留人”一样，我赶紧找到了合理的解释：查询系统还没有被准备好。   \u003cbr /\u003e   \u003cbr /\u003e\n我不知道这样一个小插曲给我造成了多大的影响。但是，再一次查分时，我几乎没有什么犹豫了：很快地输入准考证号，考生号和身份证号，顺手敲下回车。   \u003cbr /\u003e  \n页面快速呈现了出来，没有给我什么准备时间。   \u003cbr /\u003e   \u003cbr /\u003e\n我的成绩是——692分。安徽省120+名。   \u003cbr /\u003e   \u003cbr /\u003e\n我的第一反应是惊奇：我是不是输错准考证号了？但是页面上我的姓名和个人信息都清晰地呈现，不会有错。   \u003cbr /\u003e   \u003cbr /\u003e\n那一刻我的心理又回归了“高考前”式的沉默。   \u003cbr /\u003e   \u003cbr /\u003e692…科大倒是可以，清华估计没希望了。我的心又沉下去一点。   \u003cbr /\u003e\n母亲走进了我的房间，边走近边紧张地向我询问高考成绩。当我把电脑屏幕转向她时，她脸上的欣喜，我无法用文字描述。她高兴得亲了我一口。   \u003cbr /\u003e   \u003cbr /\u003e\n待家人都冷静下来，我心里仍是一如既往的平静。查分后感动得痛哭流涕，都是电视新闻上的桥段，我做不到。   \u003cbr /\u003e   \u003cbr /\u003e \n然后就是亲戚无休止的电话，是老师的祝贺，是同学在QQ群疯狂刷屏的“苟富贵无相忘”……   \u003cbr /\u003e   \u003cbr /\u003e   \u003cbr /\u003e\n彼方真的到来了吗？我不知道。   \u003cbr /\u003e   \u003cbr /\u003e\n我打开QQ，点开“红警（游戏群）”，输下“来一局”，回车。  \u003cbr /\u003e\n有时候，游戏真的能让人想起很多东西。 \u003cbr /\u003e比如，为什么要探寻。\n\n \n---\n### 附注\n\u003cdiv id=\"1\"/\u003e1:非原话，凭记忆复原。  \n\u003cdiv id=\"2\"/\u003e2:两段话分别在《高考必刷题》和《高考必刷卷》上。  \n\u003cdiv id=\"3\"/\u003e3:我记不清了。  ","cover":"images/gaokao.webp","link":"before-ncee.html","preview":"\u003cp\u003e写于高考前夜…以及高考后\u003c/p\u003e\n","title":"向往的彼方"},{"content":"\n \n# 前言  \n高考终于结束了。。。现在有时间干一些自己愿意做的事了  \n\u003c/br\u003e\n所以首先想到的是整理一下自己的过去。恰好，陪伴我将近10年的老年机（[ZTE-C R580]()）也该退休了，\n\u003c/br\u003e\u003c/br\u003e\n这个手机支持`J2ME`平台————当然和`Nokia`的性能比不了啦...————所以我的中学时光，大部分时间都由这些`java`游戏陪伴。\n\u003c/br\u003e\u003c/br\u003e\n话不多说，分享的内容主要分`软件`和`游戏`两部分。我的设备相关配置如下：\n  \n| 参数     | 详情                    |\n|----------|---------------------------|\n| 内存     | 3072KB                    |\n| 分辨率   | 240*320                   |\n| 按键/触屏？   | 按键                   |\n| MIDP版本 | 2.1                       |\n| CLDC版本 | 1.1                       |\n| 多媒体 | 支持                       |\n| 3D API   | 不支持                    |\n| 蓝牙     | 不支持                    |\n| 文件管理 | 支持                      |\n| 外插TF卡 | 支持                      |\n| CPU      | 高通骁龙 QSC6085 @ 192MHz |\n\n配置还是相当低的。所以下面列出的软件和游戏兼容性都非常强，请放心食用\\~\\~\u003c/br\u003e\u003c/br\u003e\nPS1：已经全部上传到网盘，链接在文章最后。  \nPS2：关于模拟器，电脑上请使用[KEmulator](http://www.downza.cn/soft/27362.html)，`Android`上请使用[J2me Loader](http://java.52emu.cn/j2me.php)。\n\n# 软件\n## X-plore\n![](images/QQ截图20200710073905.png)\nJava平台上最强的文件管理器！  \n支持多种压缩格式，支持蓝牙远程连接管理，当年在塞班上也是一代神软了…  \n听说几年前出了`Android`版，一样好用。可惜时过境迁，该淘汰的总该被淘汰了。\n## SoundMachine\n![](images/QQ截图20200710074106.png)\n![](images/QQ截图20200710074116.png)\n一个钢琴模拟软件，可以用键盘来弹奏简单的音乐。  \n支持MIDI合成乐器。\n## 来电小骗子\n![](images/QQ截图20200710074256.png)\n类似于`Android`平台上的模拟呼叫。可以自定义模拟来电，方便在应急时脱身。  \n当然，现在用途已经不大了。\n## FirstAid\n![](images/QQ截图20200710074443.png)\n![](images/QQ截图20200710074508.png)\n一本快速急救手册，适用于多种紧急情况…  \n虽然有些内容已经过时了，但还是值得一看。\n## AnyView\n![](images/QQ截图20200710074633.png)\n![](images/QQ截图20200710074706.png)\n`J2ME`平台上最强的阅读器！  \n支持几十种文本格式，堪称当年的看书利器。依稀记得我曾在`AnyView`里用按键机读完整本《白夜行》… \n \u003c/br\u003e\u003c/br\u003e\n最近， [`AnyView`似乎在`Android`平台重新回归更新](http://www.anyview.net/)了。10年的积淀让我这个情怀党也开始入手了ˉ﹃ˉ\n## 天天动听\n![](images/QQ截图20200710074835.png)\n![](images/QQ截图20200710074857.png)\n这个堪称最强播放器啊…  \n从`Java`一直到`Android`，这可能是最早支持歌词滚动播放的在线/离线双用音乐播放器了。  \n睡眠、锁屏、横屏播放、歌词/写真匹配等现在司空见惯的功能，这个软件或许是先河的开拓者。  \n数10年前在线音乐市场的和谐和现在的各方打架相比，不堪回首 눈_눈\n## Windows Vista\n![](images/QQ截图20200710075004.png)\n![](images/QQ截图20200710075021.png)\n没有什么鬼用，~~用来装B吧大概~~¯\\\\_(ツ)\\_/¯\n## 掌上C语言\n![](images/QQ截图20200710075127.png)\n![](images/QQ截图20200710075139.png)\n![](images/QQ截图20200710075153.png)\n非智能机平台上居然还能写c语言，这是我没想到的  !!∑(°Д°ノ)ノ    \n依稀记得这是从某个塞班论坛淘下来的老物…只能编写和运行，不能编译，拿来玩玩还是可以的。  \n(记得以前还淘到过在`J2ME`上运行的`Java`编译器，不过现在很难找到了叭 ⊙ω⊙)\n## 指南针\n![](images/QQ截图20200710075427.png)\n![](images/QQ截图20200710075412.png)\n![](images/QQ截图20200710075403.png)\n大概是我换用安卓手机后，这个非智能机上使用频率最高的软件了…  \n功能很简单，输入经纬度即可计算日出日落时间、月出月落时间、月相、暮曙光等，还可以将手机屏幕当成指南针…\n## 莫尔斯码Lighter\n![](images/QQ截图20200710081055.png)\n![](images/QQ截图20200710081115.png)\n练习摩尔斯电码用。  \n偶尔也可以拿来当屏幕手电筒。\n\n---\n\n施工中…","cover":"images/nokia-2617880_1280.jpg","link":"my-j2me-game.html","preview":"\u003cp\u003e扔掉老年机前，对过往的追念\u003c/p\u003e\n","title":"一些相当棒的Java游戏"},{"content":"\n\n# 前言\n[纸小墨](https://imeoer.github.io/)作为我个人从2018年开始，长时间使用的少数几个博客软件之一(另外两个是`WordPress`和`Z-Blog`)，自发现以来就一直被我寄予厚望。  \n可惜的是，由于软件本身操作复杂，太过小众，前期宣传不足，只在几个程序员的小圈子里流传，后期又没有`Hexo`这样的大量开源用户支持，纸小墨的更新日期已经死在了2015年。  \n![纸小墨的主页](images/inkpaper-homepage.jpg)\n不过，尽管如此惨淡，也不影响它在我心中的地位…  \n  \n因此，特地为它用自己~~破烂的~~前端功夫写了个`Material Design`主题。可能没有什么人会真的来使用，但是就我个人来说，留个纪念也了胜于无，证明我曾经用过吧…  \n  \n---\n  \n# InkMaterialTheme\n简洁大方的 Material Design 主题。  \n利用久负盛名的 [MDUI](https://www.mdui.org/) 作为框架支撑，在原版主题上稍作修改，没有进行太多改动以保持纸小墨的简洁本质。\n# 使用者们\n[行云小站](https://w568w.eu.org/)\n# 预览\n![](https://i.loli.net/2020/04/03/S5f3NnukdhmYLxr.png)\n![](https://i.loli.net/2020/04/03/J4GaYg9VfhLD3S6.png)\n# 快速使用\n## Step 1\n**如果您有`git`工具** : 执行`git clone https://github.com/w568w/InkMaterialTheme.git`。  \n**如果您不知道什么是`git`或者没有`git`工具** : 点击页面上绿色的`Clone or download`按钮，选择`Download ZIP`。  \n## Step 2\n将`theme`目录直接覆盖到你的博客目录下的同名目录。\n## Step 3\n**如果需要自定义**：浏览`theme`目录，在`_header.html`和`page.html`中，您可以找到自定义的相关说明。  \n**如果不需要**：您已经完成了配置！\n# 问题\n- 搜索时不会展示为卡片\n- 搜索时不能用`x`关闭搜索结果。\n  \n---\n  \n下载地址: [https://github.com/w568w/InkMaterialTheme](https://github.com/w568w/InkMaterialTheme)","cover":"/images/example-en.png","link":"ink-material-theme.html","preview":"\u003cp\u003e过气 Blog Generator 也要整MD.jpg\u003c/p\u003e\n","title":"纸小墨的 MD 主题 0.1版发布"},{"content":"\n\n# 前言\n作为搞机无数的老机油，我一直对寻找**最佳的**功能型软件有着独特的爱好…  \n所以四五年以来，各种软件前前后后用了几十款，稍有不合心意就要换，~~换软件比换老婆还勤快~~  \n光安装包就占了硬盘将近50G的空间\\_(:з」∠)\\_  \n  \n\n今天觉得很有必要整理一下，一方面是给自己提个醒，另一方面也是希望能避免看官走我的老路。  \nPS:当然，各个人喜好不同，下面列出的只是鄙人在反复比较后认为最佳的软件，各位看官如果有更好的同类软件也欢迎补充 ~   \n(话说这来必力最近有点不正常，没办法评论的同学关掉广告屏蔽软件再试试     \n下面按照各个功能分类，贴出我心中的最佳软件  \nヾ(❀╹◡╹)ﾉ~   \n\n# 下载工具\n## Windows: Internet Download Manager\n这个想必我不用多说，大家都懂，Windows平台上最好用的多线程下载工具，没有之一！\n## Windows: 极速迅雷\n虽然迅雷最新版变得很恶心，但是旧版本的极速迅雷还是值得一试的。  \n迅雷在 P2P 下载方面，确实无人能敌；另外对于解决死链，迅雷也很有一套。   \n当然这里特指精简版。 \n  \n## Windows: BaiduPCS-Go\n\u003e 2020年4月16日更新:`PanDownload`作者被捕，默哀。  \n\n这个是专门用来下载百度云文件的工具。  \n在油猴脚本、PanDownload等工具相继失效之后，应该是目前Windows平台上少数没有被完全限速的软件之一了。  \n下载请直接到[Gayhub](https://github.com/)搜索～\n## Android: Advanced Download Manager\nADM是安卓平台上的与IDM相同的佼佼者，想必也不用多说了（ '▿ ' ）\n \n# 文档编辑\n## Windows \u0026 Android: WPS\n尽管有不少人黑它，但[WPS](https://wps.cn)确实是目前国内最好用的Office替代品。  \n由于目前的国内网络环境，`Microsoft Office`同步速度真的慢慢慢慢，每一次打开云文档都要卡好久눈\\_눈，因此相比WPS，Office对国情支持不好，~~功能再多也会被局域网打倒~~。  \n有人反感WPS的广告和会员，觉得它吃相太难看。我的建议是使用`精简版`或`破解版`…当然，如果你对破解版比较敏感，也可以手动在`维护工具`里关掉WPS广告。  \n至于会员…不用会员功能不就行了么∠( ᐛ 」∠)\\_  \n \n# 音视频剪辑\n## Windows: Goldwave\n作为非专业剪辑人士，我对这方面的需求并不是很大，顶多就是剪剪vlog什么的…所以`Goldwave`这么一款业余级的轻量音频剪辑工具，已经完全够用。  \n如果是需要制作一些专业的视频，还是建议上`Adobe After Effect`和`Adobe Premiere`。对这方面了解不多，我就不多嘴了。\n## Android: 快剪辑\n这里肯定会有人推`KineMaster`或者`威力导演`…   \n尽管它们确实很好用，但是在我的老华为上不兼容啊QAQ  \n快剪辑虽然是360推出的业余剪辑工具，但是它分轨、转场、时间轴编辑功能一应俱全，足以满足大多数日常要求。  \n另外，快剪辑有个非常棒的功能:**自动根据音频生成字幕**。这个做旁白非常合适～  \n\n# 日程安排\n  \nPS: 现在做日程安排，**基本上是用纸笔了**。相比于在手机上点击\\[完成\\]，个人感觉还是拿笔在纸上划掉更爽…  \n所以下面推荐的是__曾经用过__的，而并非正在用的。  \n  \n## Windows＆Android: Microsoft Todo\n这个也算是后起之秀吧，微软把`奇妙清单`收购了之后，开发的新版本。  \n优点在于UI美观(~~微软破天荒地没有使用`Windows 10 UI`~~)，而且能与微软账号关联…果然这种 App 还是依托大公司的更好…  \n目前测试还不需要翻墙，不知道以后会怎么样。\n  \n# 即时通讯\n  \n## Windows \u0026 Android: Telegram\n如果不是上网课，我可能会一直用tg…可惜现在日常生已经被钉钉占领了…  \n除了极高的安全性，开源和隐私防护也是我选择TG的理由。我虽然不是狂热的开源爱好者，但是在对于每天都要打交道的应用来说，还是尽量选择保护性高的比较好…  \n\n# 通信信道\n## Android: 灵狐浏览器  \n使用这个并不是因为它有多好用，而是它是唯一宣称已经过国家许可的公有免费信道工具。  \n有人可能疑惑我为啥不用`Virtual Private Network`、`Way To Ray`或者`Socks`工具。我得承认我在这方面有点“精神洁癖”：宁可不浏览受限网页，也不想随便被警察叔叔请喝茶…  \n~~当然还有一个原因就是**没钱啦**~~\n  \n目前应用还没有要收费的迹象，应该还能免费用很久。用手机号注册就能登陆。  \n有人担心郭嘉授权的会不会有隐私记录？这一点可以肯定地说，是**一定会有的**。所以它只适合拿来查查资料，看看推特脸书油管，而不适合进行敏感操作。有句话说得好：_不做亏心事，不怕鬼敲门_…  \n  \n---\n  \n大概就这些了，后面想到再补充吧。🙈","cover":"/images/my-software.jpg","link":"my-best-software.html","preview":"\u003cp\u003e闲来无事也整理一下吧~\u003c/p\u003e\n","title":"我心中的最佳软件合集"},{"content":"\n# 什么是CI？\nCI，即Continues Integration，是一种软件开发实践，如一个团队的开发成员经常集成他们的工作，通常每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽早地发现集成错误。  \n通俗的解释就是每次提交代码到 Github，都会触发某种自动化过程(如自动编译,测试等)，以跟进开发过程。  \n当然我们这里使用它，不是这个目的！我们希望实现的是:在每一次提交新文章到`Github Pages`时，远程都能自动生成网页，免得本地手动生成的麻烦…  \n这里决定使用的是`Travis CI`，它的优点是能直接与Github集成，省去很多麻烦。\n\n# 1.注册Travis CI\n打开[Travis CI](travis-ci.org)，用Github账号登录。  \n简单配置一下`token`，一路下一步就好了…  \n这里偷个懒(\u003ev\u003c)，详细步骤来自于[这里](https://dmego.me/2017/10/13/deylpoy-hexo-with-TravisCI/)：  \n## 在GitHub 上生成 Access Token\n\n如果想要 让`travis CI`构建完成之后自动 push 到 master 分支，则travis需要有对这个仓库进行操作的权限，此时我们就需要为Travis CI 配置`Access Token（访问令牌）`。  \n\n在GitHub上生成Access Token 的步骤是，点击头像进入设置（Settings）,然后点击左边菜单栏最下面的`Developer settings` 选项，进入后点击左边的`Personal access tokens`选项，进入后点击右上角的`Generate new token`按钮。  \n \n先给 Token 起一个名字，然后为它设置一些权限，其中`repo`的权限是必须的，其他可以随意添加。  \n\n点击下面的 create token 按钮，就会生成一个已经赋予好权限的 token 值，接下来我们进入Travis CI 网站的配置中。  \n## 配置 Travis CI\n\n如果之前从未使用 Travis CI 来构建项目，则我们先需要使用GitHub账号来登录网站,登录进来后，如果底下 没有把 GitHub 仓库中的项目加载进来，可以手动点击右上角的 `Sync account` 按钮，待到同步完成后将要自动构建的项目开启。  \n\n开启后点击设置图标就可以进行一系列的设置，先开启`General`里的两项选项：  \n\n    Build only if .travis.yml is present:只有在.travis.yml文件中配置的分支改变了才构建  \n    Build branch updates:当分支更新后开始构建  \n\n然后在`Environment Variables`一栏里将在 GitHub 下获取的的`Access Token`值添加进来。   \n呼呼~ 这样就配置完成了。接下来我们需要设置`.travis.yml`。  \n  \n# 2.配置`.travis.yml`\n`.travis.yml`是一个简单的脚本兼配置文件，用于指示如何进行自动化构建。  \n一个通常的`.travis.yml`大概如下:\n```\nlanguage: node_js\nnode_js: stable\n\n# S: Build Lifecycle\ninstall:\n  - npm install\n\nbefore_script:\n  - npm install -g gulp\n\nscript:\n  - hexo g\n\nafter_script:\n  - cd ./public\n  - git init\n  - git push\n# E: Build LifeCycle\n\nbranches:\n  only:\n    - master\nenv:\n global:\n   - GH_REF: github.com/xxx/xxx.git\n```\n  \n其中各个部分含义:  \n```\nlanguage:用于指定预配置环境，如nodejs、java、android等。系统在构建前会自动安装所需环节。\n \ninstall和before_script:在开始操作前执行，一般用于下载、安装自己在构建中所需要的库。\n \nscript:正式的构建过程。\n \nafter_script:构建之后执行，一般用于发布或者push。\n \nbranches:指定在哪条分支上发生变化时开始构建，通常是master。\n \nenv:Environment，一些环境变量。\n```\n  \nPS:**如果没有指明系统环境，构建所使用的系统都是Linux哦！**\n害，说了这么多废话，(¬◡¬)✧总算要入正题了！  \n这里以我所使用的博客软件`纸小墨`为例；  \n当然，如果你使用`hexo`等软件，过程也大同小异。  \n我们的操作大概分以下几步:  \n\n1. 下载`ink`构建文件。\n2. 执行`ink preview`进行构建。\n3. `git`推送到`master`分支。\n4. 删除构建中的临时文件。\n  \n但！是！这里有一个坑:**推送到master分支的过程会再次触发自动构建，导致进入递归，无限构建的过程…**  \n解决这个坑也不难，只要在`push`前判断一下就好了，下面直接上代码:  \n```\nlanguage: node_js\nnode_js: stable\n\n# S: Build Lifecycle\nbefore_install:\n  - wget https://imeoer.github.io/release/ink_linux_386.tar.gz\n  - tar -zxvf ink_linux_386.tar.gz\n  - ls\n  - sudo mv ./ink /usr/local/bin/\n\nscript:\n  - ink build\n\nafter_script:\n  - git config user.name \"w568w\"\n  - git config user.email \"1278297578@qq.com\"\n  - rm -rf ink_linux_386.tar.gz\n  - rm -rf ink_linux_386.tar.gz.1\n  - rm -rf ./blog/\n  - rm -rf ./ink\n  - git add .\n  - if [ $(git log -1 | grep -c \"Update\") -gt 0 ]; then echo \"Have been updated\";else git commit -m \"Update\"\u0026\u0026git push \"https://${ttoken}@${GH_REF}\" HEAD:master;fi\n# E: Build LifeCycle\n\nbranches:\n  only:\n    - master\nenv:\n global:\n   - GH_REF: github.com/w568w/w568w.github.io.git\n```  \n其中的`ttoken`是上一步中定义的`access token`的变量名。\n这里应该不需要太多解释吧…重要的就是这一行:  \n  \n```\nif [ $(git log -1 | grep -c \"Update\") -gt 0 ]; then \necho \"Have been updated\";\nelse \ngit commit -m \"Update\"\u0026\u0026git push \"https://${ttoken}@${GH_REF}\" HEAD:master;\nfi\n```  \n  \n稍微有一点Linux Shell基础的同学知道，它的意思是判断上一次提交的`message`中是否含有`Update`字样，如果含有则放弃本次提交。  \n# 3.提交\n全部做完后别忘了提交到远程git库！  \n然后，应该就可以看到第1次结果啦~  \n（ '▿ ' ）  \n![如图！ヾ(❀╹◡╹)ﾉ~](https://i.loli.net/2020/03/13/pmVI26dSXlaJKvZ.jpg)  \n  \n# 后记\n\n现在想起来其实这种做法挺蠢的，为什么不在一开始就分出`master`和`source`两个分支呢？  \n~~还是暴力出奇迹好哇~~","cover":"images/sai-kiran-anagani-555972-unsplash.jpg","link":"travis-ci-for-blog.html","preview":"\u003cp\u003e…实在懒得build静态网页了…\u003c/p\u003e\n","title":"用 Travis CI 实现博客持续集成"},{"content":"\n# 关于一直没有更新的解释…\n其实并不是忘了…  \n博客用的是`纸小墨`作为`Blog Generator`，而这个破工具偏偏只支持`Windows和Linux x86`平台！家用的电脑没有安装Git，所以一直懒得更新…  \n今天上午花了一上午时间捣鼓了`Travis CI`来做持续集成，这样至少在开学前都可以更新了。 \n# 现状\n因为[新冠疫情](https://h5.qzone.qq.com/ugc/share?sharetag=7E2D4743BE91531F83382AB42C5E6A7E\u0026jumptoqzone=1\u0026bp7=\u0026bp2=\u0026bp1=\u0026_wv=1\u0026g_f=2000000103\u0026no_topbar=1\u0026res_uin=1278297578\u0026appid=311\u0026cellid=ea45314c43ce275e93590e00\u0026subid=\u0026g_ut=3\u0026plg_dev=1\u0026plg_usr=1\u0026plg_auth=1\u0026plg_nld=1\u0026plg_uin=1\u0026from=mp)被困在家里两个月了，难受  \n连续上了一个多月网课，对网课质量表示担忧…\n# 展望\ncoding 什么的也先放放吧，还是希望今年高考能考个好成绩QAQ！冲鸭！  ","cover":"","link":"2020-hopes.html","preview":"\u003cp\u003e为什么我在今年高考？！！\u003c/p\u003e\n","title":"2020年，展望"},{"content":"\n![Photo by Kristina Tripkovic on Unsplash](images/kristina-tripkovic-602495-unsplash.jpg)\n\n# 关于w568w的近况 \n\nw568w已经在高中紧张的学习里被淹没啦.....  \n所以这里给出一些可以紧急找到w568w的联系方式哦  \n\n# 联系方式\n1. Email: 1278297578(at)qq.com (☆推荐!基本上每天查看并处理一次)\n2. 直接在本站评论区评论 (消息会即时转发到w568w的邮箱呢)\n3. QQ: 1278297578 (大概每两到三周登录一次)\n4. 在[Github](https://github.com/w568w/)上发issue找我 (同样会转发到上面的邮箱)","cover":"/images/kristina-tripkovic-602495-unsplash.jpg","link":"how-to-contact-me.html","preview":"\u003cp\u003e关于博主的一些联系方式\u0026hellip;\u003c/p\u003e\n","title":"如何联系到失联的博主"},{"content":"\n![Photo by Trent Szmolnik on Unsplash](images/trent-szmolnik-1262773-unsplash.jpg)\n\n# Happy new year!\n原谅我迟到的新年祝福！：P  \n各位看官，新的一年里也要元气满满哦！~","cover":"images/trent-szmolnik-1262773-unsplash.jpg","link":"2019-new-year.html","preview":"\u003cp\u003e新的一年，新的开始\u003c/p\u003e\n","title":"Hello 2019"},{"content":"\n\n\u003e **2023 年 1 月 27 日更新：**  \n\u003e \n\u003e 本文正在施工中，将原[作业部落](https://zybuluo.com/w568w/note/1081202)的文章迁移到这里。  \n\u003e 因为早年撰文不注意，本文中格式存在各种问题（如中英文标点乱用、数学符号不规范、中英文间无空格等等），需要修复完毕后才能继续更新，预计会于最近几天完成。敬请关注。\n\u003e\n\u003e **2023 年 2 月 13 日更新：**\n\u003e\n\u003e 首次更新完成，修复了大部分格式问题，但仍有少量问题未修复，如有发现请在评论区指出，谢谢。  \n\u003e 目前网站可能比较卡顿，考虑一下科学上网吧。\n\n$$\\lim_{学习 \\to 坚持} 学习=成功$$\n# 前言\n非常高兴你能浏览到这篇文章。\n我也不太清楚我写作的动机，可能纯属兴趣使然吧。\n# 参考书籍\n\n1. **《高等数学（第六版）》上册**  \n 同济大学数学系 编  \n 高等教育出版社 出版  \n2. **《7天搞定微积分》**  \n 石山平 大上丈彦 著 李巧丽 译  \n 南海出版公司 出版  \n3. **《Principles of Mathematical Analysis》**  \n Walter Rudin 著  \n McGraw-Hill Education 出版\n\n# 我是否适合看下去?\n在看这篇文章前，你至少需要掌握以下知识：\n\n1. 至少初中水平的数学应用能力\n2. 至少小学水平的阅读能力\n3. 耐心和对数学的热情\n4. 以上三条是扯淡\n5. 这条也是\n\n# What’s calculus?\n在正式开始学习微积分前，首先我们得明白微积分是啥。\n\n百度一下，我们很容易找到这样的描述：\n\n\u003e 微积分（Calculus）是高等数学中研究函数的**微分**、**积分**以及有关概念和应用的数学分支。它是数学的一个基础学科。\n内容主要包括**极限**、**微分学**、**积分学**及其应用。\n微分学包括求导数的运算，是一套关于变化率的理论。\n它使得函数、速度、加速度和曲线的斜率等均可用一套通用的符号进行讨论。\n积分学，包括求积分的运算，为定义和计算面积、体积等提供一套通用的方法。\n\n诶诶诶，别跑啊，我知道这种专家写出来的东西不是一般人能领会得了的。。\n\n简单的说，`微积分学`是高等数学(并不是高中数学)的重要组成部分，它的地位，相当于小学的四则运算或是初中的方程运算。它非常奇怪、麻烦，可是在高等数学中，你时时刻刻都要用到它。\n\n当然，**人们不会故意发明奇怪、麻烦的东西来为难自己**，它的应用十分广泛，我们在后面会慢慢提到。\n\n它主要分成两个部分：`微分`和`积分`，它们相辅相成，虽各有变化却互为表里，是一对~~基佬~~兄弟。我们会在接下来的文章中分别讨论这两个东西。\n\n废话不多说，马上上干货~~\n# 一、导数\n`导数`是微分学的主要内容。翻回去看看百度百科对导数的解释：\n\n\u003e 导数描述一个函数的变化率。\n\n这是啥么意思呢？变化率是个什么东西？\n## 1.1 First Blood —— 斜率\n先来看个函数图像：\n\n![](https://s1.ax1x.com/2018/03/21/97PLGR.png)\n\n相信你一口就能报出这个函数的解析式：$$y=x$$\n\n然后，我们再看个稍微复杂点的图像：\n\n![](https://s1.ax1x.com/2018/03/21/97ipZD.png)\n\n额，这哪里复杂了嘛！明明还是个一次函数啊。。。\n\n不不不，差别大了去了，试试找出这两个函数图像的不同之处？\n\n上下滚动页面，你应当能够看出`图像倾斜程度`存在着区别，有的数学老师也叫它「$k$ 决定函数陡平」啥啥的。\n\n回忆一次函数的表达式:$$y = kx+b (k≠0)$$\n哈，所以上面这个式子里，**$k$值的大小就代表着图像倾斜程度的大小**，不是吗？\n\n好了，你的头脑中已经有了基本的微分概念了，同学们，下课！\n\n\n![你的表情？][3]\n哈哈，开个玩笑，还是先别急着关掉页面(从哪里能找到这么没节操的文章 真是)。  \n不过这句话并没有问题，应当说，从初中学习函数开始，我们就有了对于这些知识的模糊概念，只是它们尚未发掘出来。~~所以这篇所谓的教程，其实就是帮助万恶的数学老师解决这些概念问题...~~\n\n还是回到上面这个简单的例子。我们说$y=x$与$y=2x$这两个函数的**倾斜程度**不同，因为$y=2x$显得更\"陡\"一些。\n\n虽然小明同学觉得这样描述很好，但是呢，数学家们就是不满足于「a 比 b 陡」这样听起来不是很清楚(~~也可能是因为他们语文阅读能力不行~~)的描述方式，(这样听起来不够**炫酷狂霸拽**)于是发明了一个很好(奇)听(怪)的名字用来描述一条线的陡峭程度，这就是————**斜率**。\n\n当当！我们终于接触到了第一个数学定义。\n\n呃...虽说这个定义还不完整，甚至你还没弄清啥意思，不过万事总有个开头的，是吧？\n\n接下来我们将慢慢解释斜率这个听起来很高大上的名词。\n\n既然说斜率是个数值，是数值就应该能被写出来。那么我们怎么表示它呢？\n\n再再一次回到上面的例子。容易发现，当$k=2$时，图像明显比$k=1$时的要陡峭不少。继续画下去：$k=3、4、5、6、7...$\n图像会越来越陡。\n![不同颜色的直线对应了不同的 $k$][4]\n我们发现，$k$值增大使得函数更陡峭。\n因此，***对于一次函数，我们可以用k值大小来表示它的斜率***。\n\n这个定义听起来很唐突、很随意啊...高大上的感觉顿时都没有了...\n\n更一般地说，斜率也可以这么得出:\n![][5]\n\n这样，我们对于斜率就有精确的定义了，它不再是一个模糊的概念，而是一个可以拿来比较大小的数值了。比方说，$y=2x$的斜率就是$2$。\n\n你可能被这些概念搞得有点懵。重新强调一遍，**斜率描述一条线的陡峭程度**。而**一次函数的$k$值越大，图像越陡**，所以**对于一次函数，我们可以用$k$值大小来描述它的斜率**。\n\n如果你就是没办法把$k$和斜率联系起来，稍微喘口气，再往下看吧。\n### 1.1.1 [选读]斜率的严格定义\n（对于初三及以上水平的读者，可以有选择性地阅读这些标有「`[选读]`」文字的部分，因为这些部分可以加深对一些知识的理解。如果你不想看，**跳过也没关系**。\n\n**警告：数学重灾区，请在监护人的陪同下观看。**）\n\n\n----------\n\n\n先看看百度百科上的`斜率`词条：\n\n\u003e slope，又称「角系数」，是一条直线对于横坐标轴正向夹角的正切，反映直线对水平面的倾斜度。\n\n![图挂了，稍后修复][6]\n如图，$直线P_1P_2$的斜率即为$k=\\tan\\alpha=\\frac{y\\_2-y\\_1}{x\\_2-x\\_1}$。\n其中$α$又被称为`倾斜角`，取值范围为$0^\\circ \\leq \\alpha\u003c180^\\circ$。\n\n故：当直线的斜率存在时，斜截式$y=kx+b$，其斜率即为$k$。\n\n\n----------\n\n\n## 1.2 点的斜率？\n到现在为止，我们所讨论的函数都仅限于一次函数。你可能觉得数学家们真是一群闲得蛋疼的人，一个简单的$k$值都要起个难听的名字。况且，这和微积分有个卵关系？\n\n别猴急，我们先来进一步讨论斜率的含义。在我们搞清楚这些基本概念前，空谈微积分是没啥意义的。\n --- \n言归正传。\n对于二次函数或者反比例函数，又该如何表示它的斜率呢？\n\n先来看看这个熟悉的二次函数吧。\n![][7]\n相信这样简单的U型的函数，你已经非常熟悉了。\n但是，在表示它的斜率时，你会发现有点小麻烦，不，是大麻烦。\n\n对于这个函数，我们还能用$k$值来表示它的倾斜程度吗？\n\n稍做思考，你会发现行不通。这个函数的陡峭程度不是用一个\"陡\"或者\"平\"能描述得了的。它的图像自左向右，先是快速下降，再逐渐减缓，在原点处猛地拐了一个180度的大弯，又开始逐渐变快、飞速上升。\n\n那么，显然它的整个图像的斜率已经无法直接表示了。我们是不是能求出其中一段的斜率呢？\n\n比方说，在y轴右边的这半个曲线，如果只看从0到2这一小段，你会觉得它很像$y=2x$的一小段。\n![][8]\n\n嘿，这一段的斜率是不是差不多是$2$呢？\n\n不对。\n\n唔，也不能说是全错，毕竟只是弯了点啊。。\n\n所以让我们继续放大图像，取更小的区间试试？\n于是我们放大大大大大大大大大大大大大（此处省略 N 个大）\n![][9]\n\n诶，这两个图像看起来有一部分重合了呢？！\n也不全然，毕竟前者是**曲线**，后者是**直线**呐。。\n显然，即使我们放大下去，两个图像也很难有相同的部分，或者说不可能有。\n看来硬凑直线的方法行不通，得换个思路。\n ---\n咳，如果你看得一头雾水，稍微提示一下：\n\n我们是否能对图像上的**一个点**求斜率呢？\n\n例如对于$A(1,1)$这个点，我们在它的左右各取一个点B、C，并逐渐靠近它:\n\n\u003e PS: 从这里我开始尝试使用 GeoGebra 来作图，网页版的画图实在是太!蛋!疼!了!。。\n\n![][10]\n\n![][11]\n就这样不断靠近靠近。。\n![][12]\n![][13]\n终于，在N+N次逼近A点后，**三个点几乎实现了重合**:\n![][14]\n注意，我这里之所以强调**几乎**，是因为它们确实没有碰上，只是它们之间的距离已经微小到了无穷的小。\n\n此时，我们仍然能作直线$BC$，我们就称这条直线为**点$A$在函数$y=x^2$上的切线**。\n\n好了，讲了这么多，我们可以回到原来的话题了。点A的斜率是多少？我相信，你已经心中有数了吧。\n\n**二次函数图像上的点A的斜率就是点A在这个函数图像上的切线的斜率。**\n\n这句话初看有点儿像句绕口令，多看几次才能搞明白。\n\n(假设你已经看明白了，如果没有，你就假装看懂了 :) )\n\nOK，那么接下来，让我们正式开始导数的学...哦不！可能还要加点料才行....\n## 1.3 极限？\n在介绍导数之前，我们还得弄懂另外一个概念:极限。\n极限，顾名思义，就是到达了极点的状态。比如说，考试还有1分钟就要结束时题目还没有答完时的感觉，或者暑假开学前的晚上猛补作业时的感受。人们在遇到极限时通常都会想:\"不行了!不行了!\"\n\n但是，数学中的极限也是这个意思吗？如果指\"不行了\"\"到头了\"，又怎么能解决数学问题呢？\n事实上，数学中的极限的含义更加积极，它有\"尽可能靠近\"的意思，也就是无限地靠近。\n由于是***数***学，自然离不开数值了...所以，**极限就是指一个数值尽可能地向另一个数靠近。**\n\n啥叫\"尽可能地靠近\"?举个例子，小明的家距离学校1000m，某天小明去上学，于是他与学校的距离变化如下:\n```\n1000m\n∨\n500m\n∨\n200m\n∨\n100m\n∨\n1m\n∨\n0.1m\n∨\n0.01m\n∨\n0.0000000000001m\n...\n∨\n0.0000000000000000000000000001m\n```\n可以看到，小明与学校之间的距离越来越小，越来越靠近于 0m，但是就是到达不了 0m（~~因为他不想上学~~），于是我们就可以说 \n\n$$\\lim_{距离 \\to 0 m}$$\n\n突然给出这么一个数学式子，你可能会一脸蒙蔽：这是个啥？  \n查查英汉词典可得知：*Lim* 原来是 *Limit* 的缩写，而 *Limit* 就是「极限」的意思。下面的小字里的「$\\to$」表示「向 xxx 靠近」，所以这里的意思是\"让 距离 这个值给我向 0m 尽可能地靠近!\"\n\n上面这个式子就表示**距离 无限地向$0\\ m$靠近**(但是就是到达不了$0\\ m$!)\n\nOKOK，理解了，那么让我们在式子上再加点花样吧!\n\n$$\\lim_{x \\to a} f(x)=b$$\n诶...更晕了...你可能会想：「这东西...现在我连符号都看不懂了！」  \n别急，让我再给你挨个儿解释解释！\n\n---\n首先看这个$f(x)$，这里的$f$是啥意思呢？其实很简单，f是单词“function”开头第一个字母，“function”就是函数的意思，所以$f$就是指某个函数。比如说一次函数，在初中学习中我们表示成\n\n$$y=2x$$\n\n想表示$x=1$时的值，我们得说\n\n$$当x=1时,y=2$$\n\n但是到了高中数学以及高等数学中，因为这样写起来太麻烦了，所以同一个函数，我们表示成\n\n$$f(x)=2x$$\n\n想表示$x=1$时的值，就可以简练地写成\n\n$$f(1)=2$$\n\n是不是很方便？  \n\n（顺便说一句，这里不一定必须用$f$作为函数的标识，如果你喜欢，也可以写\n\n$$我真是酷毙了(x)=2x,我真是酷毙了(1)=2$$\n\n）\n\n---\n回到上面的式子。**$f(x)$就是以x为自变量的某个函数**，在这里它到底是什么，我们不管它。  \n继续往下，下面的\"$x \\to a$\"意思应该是\"自变量x向a无限地靠近\"。  \n这样，这个式子我们至少弄懂一半了，$\\lim_{x \\to a} f(x)$就是表示\"对于$f(x)$这个函数，让$x$无限地逼近$a$\"。  \n奇怪的是，式子的后面居然出现了等于号...小明上学时，与学校的距离也是一直在不停地变小啊...如果说是无限靠近$a$，又哪来的等于不等于呢？难道$f(x)$这么神奇，可以一边靠近，一边等于某个值吗？\n\n这里就要提醒一下了:含有$lim$的式子里，所有\"$=$\"的意思都有一点小小的变动，不再表示\"等于什么\"，而是“靠近什么”。\n\n所以啊，上面这个式子表示**\"当$x$无限地靠近$a$的时候，$f(x)$无限地靠近$b$\"**。  \n啪啪啪！第一个奇怪的数学符号，终于是被我们弄明白了！\n### 1.3.1 小练习\n稍微弄几道关于极限的题来做做吧...我们来找找感觉。\n#### 第一题\n$$\\lim_{x \\to 1} x=？$$\n唉...没什么难度嘛，直接把1代入进$x$算一下，结果就是$1$。\n\n---\n#### 第二题\n$$\\lim_{x \\to 3} x^2=？$$\n稍微需要一点计算了，$3^2=3*3=9$，所以答案是$9$。\n\n---\n#### 第三题\n$$\\lim_{x \\to 0} (2x^2+5x+8)=？$$\n似乎和第二题差不多么，只是计算有点麻烦了，列个式子算一下，$2x^2+5x+8=2*0^2+5*0+8=8$，结果是$8$。\n\n---\n#### 第四题\n你可能纳闷：这和一般的函数计算有什么区别？从哪里能体现出这个$lim$的特殊性？  \n来看这题：\n\n$$\\lim_{x \\to 1} \\frac{x^2-3x+2}{x-1}=？$$\n\n妈呀，这题好像不能代入计算了？难道答案是$\\frac2 0$吗？  \n不可能，分数的分母不能为0的...  \n那要怎么算呢？没有结果吗？  \n实际上，我们发现这个式子可以因式分解:\n\n$$\\frac{x^2-3x+2}{x-1}=\\frac{(x-2)(x-1)}{x-1}=x-2$$\n\n所以上面的题目就相当于\n\n$$\\lim_{x \\to 1} (x-2)=？$$\n\n答案就是$-1$。\n\n这里你可能会说：$x-1$既然为0了，又怎么能约分上面的分数呢？  \n我们需要再看一遍极限的概念：**一个数值尽可能地向另一个数靠近。**这里的$x-1$准确地说，应该是一个非常非常接近于0，但不是0的值，所以是可以约分的。  \n这里用到了因式分解的技巧，算是比较麻烦的一题，我们暂时搁下，不深入讨论了。\n\n---\n### 1.3.2 额外的问答时间\n你可能还有一些问题..让我尝试解答一下。  \n\n问：为什么代入数值，求得的就是它的极限呢？有什么理论依据吗？  \n\n答：这个问题比较难以解释，需要牵扯到函数的连续性之类的。我们还是按下不表，以免影响了本文的易懂性。  \n\n问：上面说极限的格式是 $\\lim\\limits_{x\\to a} f(x)=b$，怎么后面又写成 $\\lim\\limits_{x\\to 1} x=1$ 了呢？  \n\n答：格式里给出的写法是大概的、通用的写法，实际使用中我们不会写成 \n\n$$f(x)=x,\\lim\\limits_{x \\to 1} f(x)=1$$\n\n这么麻烦，直接用$x$代替极限格式中的$f(x)$，其潜台词也就是默认$f(x)=x$了。\n## 1.4 斜率的计算\n嗯，讲完了斜率的画法和极限的概念，我们可以综合一下这两个知识，开始真正的导数之旅了。  \n\n我们来看看斜率到底是怎么算出来的。\n![][15]\n我们仍然以这个函数图像$f(x)=x^2$为例。  \n如果我们设A点的坐标为$(x,f(x))$，那么C点坐标可以表示成$(x+h,f(x+h))$ (h是某个值)，这没问题吧？  \n那么\n\n$$AC的斜率=\\frac{C点纵坐标-A点纵坐标}{C点横坐标-A点横坐标}$$\n\n如果你看到这个式子感到一脸懵，那么你得重新看看这张图了:  \n![][16]\n一次函数的斜率是某两点的竖直高度差除以水平高度差。类似地，AC的斜率我们也可以这么写。  \n继续我们的计算：\n\n$$AC的斜率=\\frac{C点纵坐标-A点纵坐标}{C点横坐标-A点横坐标}=\\frac{f(x+h)-f(x)}{(x+h)-x}=\\frac{f(x+h)-f(x)}{h}$$\n\n这样，我们就得到了两点之间的斜率公式。\n\n再进一步想想，我们要求出的是点A的斜率，光有两点的斜率公式要怎么办呢？\n\n不管三七二十一，咱们先把数值代进式子里面再说。A点的坐标是（1,1），所以有\n\n$$AC的斜率=\\frac{f(1+h)-f(1)}{h}$$\n\n\n这个式子看起来还是没法算啊...让我们稍微再化简一下，可以发现$f(1)=1^2=1，f(1+h)=(1+h)^2$。\n\n所以这个式子还可以进一步化简：\n\n$$AC的斜率=\\frac{f(1+h)-f(1)}{h}=\\frac{(1+h)^2-1}{h}$$\n\n根据刚学到的完全平方公式，还可以再展开:\n\n$$AC的斜率=\\frac{(1+h)^2-1}{h}=\\frac{h^2+2h+1-1}{h}=\\frac{h^2+2h}{h}=h+2$$\n\n这里的$h$是多少呢？\n\n刚才讲到，$h$表示的是A点与C点横坐标的距离。而这两点，在前面就说到是非常非常接近的，所以$h$应该是一个很小很小的值。\n\n很小很小...很接近很接近...有没有觉得这两句话有点熟悉？  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n没错！就是在 [极限？](#极限) 这一节里，我们简要地讲了如何正确处理数学里很接近的值。\n\n关键的地方来了！**$h$既然很小，我们就可以把上式加上$\\lim$写成**：\n\n$$AC的斜率=\\lim_{h \\to 0}(h+2)$$\n然后，后面这个式子的计算方式已经略熟悉啦，直接算出\n\n$$AC的斜率=\\lim_{h \\to 0}(h+2)=2$$\n这样，我们就终于得出了**点A(1,1)在$f(x)=x^2$上的切线AC的斜率**，也就是**点A(1,1)在$f(x)=x^2$上的斜率**。  \n看起来，计算一个点的斜率也没那么困难嘛！\n### 1.4.1 小结\n上面求斜率的过程可以概括成这几步：\n\n1. 在要求斜率的点$(x,f(x))$附近找出一个与它很靠近的点$(x+h,f(x+h))$！\n2. 把斜率用$\\frac{C点纵坐标-A点纵坐标}{C点横坐标-A点横坐标}$表示出来！\n3. 在式子前面加上$\\lim_{h \\to 0}$，代入进去计算斜率！\n\n### 1.4.2 通式\n从上面的过程中我们可以看出，求某个点的斜率有固定的步骤和方法。依照这个方法，理论上来说我们可以求出任何函数上点的斜率。  \n接下来让我们试着找出这样一个公式，来表示任何函数$f(x)$上任意的点$(x,f(x))$的斜率，这样，以后进行计算时就很方便了。  \n这个过程并不困难。让我们用$f(x)$来代替上面的$1$就可以了。\n\n$$斜率=\\lim_{h \\to 0}{\\frac{f(x+h)-f(x)}{(x+h)-x}}=\\lim_{h \\to 0}{\\frac{f(x+h)-f(x)}{h}}$$\n\n这就是**任意函数在某一点的一般斜率公式**。\n呼，~~讲了这么多废话~~，我们总算开始步入正轨~~，而不是在各种概念上原地打转~~了。（哈哈）\n\n记不住完整的公式也不要紧，需要用到的时候现场推导就可以了，理解这个有点复杂的式子才是关键。\n### 1.4.3 求斜率有什么用？\n我们已经基本掌握了求某一个点的斜率的方法。那么，这个东西有什么用处呢？  \n毕竟，如果没有实际用途的话，这样的数学工具看起来也没有什么意义啊...  \n在求导的用途中，最重要的也就是**求某一点的切线的函数式**。  \n因为用导数可以得出某一点的斜率，把斜率作为$k$代入$f(x)=kx+b$，很方便地能求出该点的切线方程。  \n实际上，在本文中我们就是用\"某一点切线的斜率\"来定义\"某一点的斜率\"的，是不？\n\n依然以上面一节中的$f(x)=x^2$和点$A(1,1)$为例，我们来求一下A点的切线方程。\n\n已经知道A点的斜率为2了，所以立即有\n\n$$g(x)=2x+b$$\n\n是A点的切线方程。\n\n又知道这个方程经过A点，故使用待定系数法：\n\n$$g(1)=2*1+b=1$$\n\n解得\n\n$$b=-1$$\n\n所以A点的切线方程就是\n\n$$g(x)=2x-1$$\n\n这个结果对不对？画出来看看就知道有没有问题了。![][17]\n图中红色的线就是我们刚刚求出的直线。看起来它的确是A点的切线。\n\n另一个用途是**求函数的最大/最小值**。容易看出，上面这个函数的顶点$O(0,0)$的斜率为0。  \n因为顶点有\"这一点的前后既不在上升，也不在下降\"的性质，所以**顶点的斜率都应该是0**。  \n也就是说，只要找到一个函数中有一个斜率为0的点，就可以确定这一点是函数的一个顶点。\n\n在接下来的 导函数 一节里，我们会讲得更多。\n## 1.5 导函数\n了解了导数和函数，这个\"导函数\"是个什么东西啊？别急，听我慢慢道来。\n\n\n再看一眼这个式子：\n\n$$\\lim_{h \\to 0}{\\frac{f(x+h)-f(x)}{h}}$$\n\n其实，这个式子就是**$f(x)$的导函数**。\n\n函数是什么？我们复习一下函数的定义：\n\n\u003e 设A，B是非空的数集，如果按照某种确定的对应关系f，使对于集合A中的任意一个数x，在集合B中都有唯一确定的数$y$和它对应，那么就称映射$f:x\\to y$ 为从集合A到集合B的一个函数，记作$y=f(x)$。\n\n不好意思拿错了，是这个：\n\n\u003e 在一个变化过程中，假设有两个变量x、y，如果对于任意一个x都有唯一确定的一个y和它对应，那么就称x是自变量，y是因变量，y是x的函数。\n\n也就是说，只要有一个对应关系f，就可以说f是个函数。\n函是\"匣子\"的意思。把一个数$x$装进一个匣子，按照某个算式计算出另一个数字，就是函数。\n\n因此，**对f(x)求导的式子也是函数**。\n这个函数，对于每一个x，计算出的结果都是$(x,f(x))$在$f(x)$上的斜率。需要求导的时候，我们就不用对每个数字都重新列式求一遍了，直接代入导函数就行，很方便。\n\n导函数一般记作$f^{\\prime}(x)$。\n\n---\n继续以$f(x)=x^2$为例，我们看看它的导函数长什么样子。  \n这次我们不代入任何值，直接运用上面的公式：\n\n$$f^{\\prime}(x)=\\lim_{h \\to 0}{\\frac{f(x+h)-f(x)}{h}}=\\lim_{h \\to 0}{\\frac{(x+h)^2-x^2}{h}}$$\n\n然后是\n\n$$=\\lim_{h \\to 0}{\\frac{x^2+2xh+h^2-x^2}{h}}=\\lim_{h \\to 0}{\\frac{2xh+h^2}{h}}$$\n\n最后\n\n$$=\\lim_{h \\to 0}(2x+h)$$\n\n又因为h靠近0，所以直接舍去，得到：\n\n$$=\\lim_{h \\to 0}(2x+0)=2x$$\n\n所以$f^{\\prime}(x)=2x$。\n\n仔细观察这个式子，我们发现它很有特点。  \n比如说想求$A(1,1)$斜率，我们也不用重新计算了，直接用导函数就行了。\n\n$$A的斜率=f^{\\prime}(1)=2$$\n\n同理，想求$B(2,4)$斜率的话:\n\n$$B的斜率=f^{\\prime}(2)=4$$\n\n是不是很方便？\n\n---\n导函数本身也是函数。所以对导函数$f^{\\prime}(x)$求导还可以得到另一个函数，称为二阶导数，一般记作$f^{\\prime\\prime}(x)$。  \n当撇号过多时，比如说有个99999阶导数，直接记作$f^{(99999)}(x)$即可，不用打撇号了。\n\n---\n导函数有什么意义？只是为了装逼吗？  \n在了解这个问题之前，先想想导函数$f^{\\prime}(x)$和函数$f(x)$之间的区别和联系。\n\n| 项目 | $f(x)$ | $f^\\prime(x)$ |\n| ---- | ---- | ---- |\n| $x$对应的函数值$y$ | 是函数的值 | 是函数$f(x)$的图像上，横坐标为$x$的这一点的求导结果 |\n| 是否是函数 | 是 | 是 |\n| 求导结果 |$f^\\prime(x)$|$f^{\\prime\\prime}(x)$|\n|函数零点的意义|无特殊意义|是$f(x)$的顶点的横坐标|\n\n(注：零点：函数的零点就是$函数=0$这个方程的解。\n比如$f(x)=x^2-1$的零点就是$x^2-1=0$的解，也就是$1$和$-1$ 。）\n\n所以，导函数有一个重要的作用，就是**计算函数的顶点坐标**。  \n由于顶点的特殊性，该点的斜率是0，所以只要找出导函数$f^{\\prime}(x)$的零点，相当于找到了顶点。\n\n以$f(x)=ax^2+bx+c$为例。它求导的结果是$f^{\\prime}(x)=2ax+b$。\n\n$f^{\\prime}(x)=0$的解就是$x=-\\frac{b}{2a}$。这是不是与你在课堂上学到的二次函数的最值完全一致？\n\n---\n\n导函数的另一个作用是画函数草图。\n\n前面已经说过，如果导函数$f^{\\prime}(x)\u003e0$，说明函数在这一点上的斜率是正的，也就是说，在这一点的前后，函数应该呈上升的趋势。  \n相反，如果$f^{\\prime}(x)\u003c0$，说明函数在这一点上的斜率是负的。在这一点的前后，函数应该呈下降的趋势。  \n于是乎，只要搞明白$f^{\\prime}(x)$的图像，就可以把$f(x)$的图像画出来了。\n\n举个例子，如果我们要画$f(x)=x^2+2$的草图，我们可以结合导函数这么画：\n\n1. 求导，得到$f^{\\prime}(x)=2x$.\n2. 画出$f^{\\prime}(x)=2x$的图像。\n![][18]  \n1. 准备开始画图！先找出一个起点，这里我们取$f(0)$这一点，也就是$A(0,2)$。\n![][19]\n1. 按照$f^{\\prime}(x)$的图像所示，y轴的右边应该都是上升的，而且斜率越来越大，也就是：\n![][20]\n1. 同理，画出左半边：\n![][21]\n\n这样就把$f(x)=x^2+2$的图像大概描出来了。  \n这题中导函数的优势还不能充分体现出来。遇到一些比较复杂的函数，一般结合导函数这样画图比较方便。\n\n### 1.5.1 导数的表示方法\n前面说到，导函数一般记作$f^{\\prime}(x)$。  \n但是，实际上导函数还有一些常见的表示方法，这里介绍两种，以备后面的~~装逼~~使用。\n\n第一种也就是刚刚讲的加撇号表示法。这种方法是在19世纪，一个叫 约瑟夫·路易斯·拉格朗日 的法国大叔发明的。\n\n在他的表示法里，$y=f(x)$的导函数记作$f^{\\prime}(x)$或者$y^{\\prime}$。\n\n这种表示方法非常常见，因为它写起来很容易，加个撇号只要花上你半秒钟的时间。\n\n但是，它的弊端在于，如果有这么一个函数：\n\n$$y=a+b$$\n\n那么$y^{\\prime}$表示什么？\n\n$a$和$b$，到底谁才是自变量？谁是常量？\n\n到底$y^{\\prime}$表示是对$a$求导，还是对$b$求导？\n\n不得而知。\n\n要是有一种表示方法可以体现出对谁求导就好了。\n\n这时，我们就需要第二种表示方法，也就是 戈特弗里德·威廉·莱布尼茨 ，另一个德国大叔的写法。他也是微积分的主要创始人，他生活在17世纪，比上面那位要早几百年。  \n对$y=f(x)$关于$x$求导可以表示成：\n\n$$\\frac{dy}{dx},\\frac{d}{dx}y,\\frac{df(x)}{dx},\\frac{d}{dx}f(x)$$\n\n这些式子看起来很让人头晕...  \n(~~正因如此，他的符号至今仍在大学数学中频频现身。~~)  \n这里的$d$是`Derivative(导数)`的首字母。  \n式子的含义是对分母上的自变量，求分子上的函数的导数。\n\n其中，**$\\frac{d}{dx}$可以看成是一个整体，它乘以谁，就是对谁求导。**  \n例如：\n\n$$\\frac{d}{dx}x^2=2x$$\n\n所以，如果我们想要表示导数的导数，也就是$f^{\\prime\\prime}(x)$，要怎么写呢？\n\n就是：\n\n$$f^{\\prime\\prime}(x)=\\frac{d}{dx}\\times\\frac{d}{dx}\\times y=\\frac{d^2y}{dx^2}$$\n\n分子上加平方的位置看起来怪怪的。而且d似乎也不遵循乘法定律。  \n你可能觉得莱布尼兹的方法很麻烦，但是在后面的章节里，你会逐渐明白这样表示的优点。\n### 1.5.2 小结\u0026补充\n到现在为止，我们已经学会了：\n\n 1. `斜率`是什么\u0026怎么算\n 2.  `导数`是什么\u0026怎么求\n 3.  `导函数`是什么\u0026怎么求\n\n你可能还没有完全掌握以上内容，那也没关系！~  \n接下来我们会给出一些简单实用的公式，在你的学习过程中会频繁地使用它们来避免复杂的运算过程。一定要记牢！~\n\n---\n$$b^\\prime=0$$\n$$x^\\prime=1$$\n$$(kx)^\\prime=k$$\n$$(kx+b)^\\prime=k$$\n$$(ax^n)^\\prime=anx^{n-1}$$\n\n以上就是最基础的一组导数公式，其中$a和b$的含义是任意常数。\n\n**记住了它们，即使不会推算导数也可以轻松求出初高中大部分函数的导函数！**\n\n**尤其是最后一个，堪称初等函数大杀器...**\n\n举个例子，要求出$y=2x^{999}$的导函数，直接用上面的公式：\n\n$$y^{\\prime}=2*999*x^{999-1}=1998x^{998}$$\n\n是不是贼方便？\n\n\u003e [选读]这里还有一些为学过三角函数的同学补充的： \n\u003e \n\u003e $$(sinx)^\\prime=cosx$$ \n\u003e $$(cosx)^\\prime=-sinx$$\n\u003e $$(tanx)^\\prime=\\frac{1}{(cosx)^2}$$\n\n### 1.5.3 五年高考，三年模拟(雾)\n总觉得应该来几道题目练练手...  \n虽然这样有点像老师上课的模式，有悖本文的初衷，但是练习一下真的能掌握不少...  \n废话少说，放题过来！  \n![][22]\n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n\n1. 求出$f(x)=x^4-2x$的导函数。\n2. 求出$f(x)=(x+2)^{11}$的导函数。\n3. 求出$f(x)=x^{x}$的导函数。\n4. 求出$f(x)=\\sqrt{x}$的导函数。\n5. 求出$f(x)=\\sqrt[x]{x}$的导函数。\n6. 求出$f(x)=\\sqrt[sin(x)]{x^{cos(x)}}$的导函数。\n7. 对于以上题目，你有什么感想？\n\n\n---\n作者的话：最近学业方面实在比较忙，先是期中考，又是统考月考周考什么的，今天刚参加全省联考.....(高二狗，体谅一下)说好的两个月完工也没下落了:(\n\n**2021年9月24日更新：作者回来啦！现在已经是一条大二狗了，国庆期间会重启更新~**\n\n---\n### 1.5.4 导函数的四则运算\n上面那几题已经让你晕头转向了？没关系！看完本节和下一节之后，你将可以很快地计算出它们~~从而去装B~~！\n\n迄今为止，我们提到的例子都是一些比较简单的函数（额，当然上面的几题除外）。  \n基本上函数里都只有一个$x$。形式也就是$x+1$，$x^2$这样的，大家都学过了。\n\n但是，平时遇到的函数可没这么简单，数学考试里当然不会直接出这样的玩意儿来考你。即便刚刚学过二次函数，你也应该已经遇到$f(x)=x^2+3x+2$或者$f(x)=(x-2)^2+3$这样的函数了。**这种东西要怎么求导数呢？**\n\n其实很简单！不妨回忆一下下我们上面提到过的例子：  \n\n\u003e以$f(x)=ax^2+bx+c$为例。它求导的结果是$f^\\prime(x)=2ax+b$。\n\n（限时挑战任务！看看你能不能在 10 秒内找到这句话的出处:) ）\n\n我们先不管结果是啥，只看每个部分。这个式子的每一部分我们都会求。$ax^2$的导数就是$2ax$，$bx$的导数就是$b$，$c$的导数……呃呃，**一个常数的导数，永远是$0$嘛**。\n\n所以……它的导数就是$2ax+b$？看起来确实是这样。\n\n我们不妨大胆猜测一下：**求一个里面有加号的函数的导数，只要求出各个部分的导数，然后加起来就好啦！**\n\n然而事实是怎样呢？事实是……**我们的猜测是对的。**导数的加法就是可以这么拆开计算的。\n\n写成公式的方式就是：\n\n$$(A+B)^\\prime=A^\\prime+B^\\prime$$\n\n（别忘了一撇「$\\prime$」的含义哦，它是指对这个式子求导。）\n\n那么，这是为啥呢？这个问题我们稍微往后放放，你在后面的选读部分会看到它的证明。\n\n我们先看看利用这个，能不能做出上面的题了。\n\n第一题是$f(x)=x^4-2x$。  \n它的第一部分求导是$4x^3$（别忘了这个公式哟：$(ax^n)^\\prime=anx^{n-1}$）,第二部分的导数是$2$。所以结果就是$4x^3+2$。\n\n第二题是$f(x)=(x+2)^{11}$……额，这个怎么办呢？\n\n其实只要一点一点乘开就好了！打开我们的 Maple，输入函数，点击展开：\n![][23]\n然后按上面的方法，对每个部分求导就好了！\n\n你可能会说：$(x+2)^{11}=(x+2)(x+2)(x+2)(x+2)(x+2)...$，这么长的式子，考试的时候要展开不得累死我？\n\n当然，这种**暴力算法**虽然不能实用，但是至少是可以算出来的。如果遇到这样的函数，展开是最差劲的选择，**但起码是一种选择**……起码是可以算出来的，是吧？\n\n这种方法显然太蠢了。有没有更妙的方法来计算第二题呢？这就进入到咱们今天的重头戏：复合运算！\n\n。  \n。  \n。  \n\n**诶还没进呢，没看到标题是「四则运算」吗？等下一节吧（顶级拉扯）**\n\n加法已经说完了，我们来看看**乘法**吧。\n\n（大家读到这里可能比较突兀，因为上面的练习里面忘了出相关的题了。偏偏这个乘法运算又很重要，还是希望大家快速过一遍！不要跳过哈，不然你待会儿会后悔的，哼哼）\n\n什么叫乘法运算呢？举个例子：\n\n$$f(x)=(x^3+3x+3)(x^2+2x+2)$$\n\n这个函数怎么求导呢？有同学可能会说：**加法是分开加，那我乘法也分开乘嘛！先对$x^3+3x+3$求导，再对$x^2+2x+2$求导，然后乘起来就好了吧？**\n\n但是，But，**这样是完全错误的哦！**不如再想想？先乘开自己求导一下，再找找规律？\n\n算啦算啦，我知道你很想知道，先把正解放在这里：  \n\n$$f^\\prime(x)=(x^3+3x+3)^\\prime(x^2+2x+2)+(x^3+3x+3)(x^2+2x+2)^\\prime$$\n$$=(3x^2+3)(x^2+2x+2)+(x^3+3x+3)(2x+2)$$\n\n这就是说，**乘法的规则和加法完全不同，它的导数是对第一个式子求导，乘第二个；再对第二个式子求导，乘第一个。然后加起来。**  \n写成公式的方式就是：\n\n$$(AB)^\\prime=AB^\\prime+A^\\prime B$$\n\n或者写得再「专业」一点：\n\n$$(f(x)g(x))^\\prime=f^\\prime(x)g(x)+f(x)g^\\prime(x)$$\n\n先尝试理解一下这个式子哈。  \n我知道你的心里肯定装满了大大的问号：凭啥这么算？你这是个啥计算方法？你这样算出来，真的是对的嘛？\n\n很不幸的是，它确实是对的。凭什么呢？  \n这就有点超过知识范围了。  \n我一起放在下面的选读部分吧，如果你自认为可以，不妨挑战一下阅读！应该……不会需要太高的数学水平？*（这个挑战就没有上面的「习题」那么坑了，哈哈！）*\n\n\u003e [选读] 加法求导公式的证明  \n\u003e 要证明对两个函数$f(x)$和$g(x)$，可以推出$(f(x)+g(x))^\\prime=f^{\\prime}(x)+g^{\\prime}(x)$。  \n\u003e 先回顾公式：\n\u003e \n\u003e $$f^{\\prime}(x)=\\lim_{h \\to 0}{\\frac{f(x+h)-f(x)}{h}}$$，  \n\u003e \n\u003e 所以写出$(f(x)+g(x))^\\prime$的求导式子，然后摆弄一下式子的加法顺序：\n\u003e \n\u003e $$\\begin{aligned}(f(x)+g(x))^\\prime\\\\\u0026=\\lim_{h \\to 0}{\\frac{(f(x+h)+g(x+h))-(f(x)+g(x))}{h}}\\\\\u0026=\\lim_{h \\to 0}{\\frac{f(x+h)+g(x+h)-f(x)-g(x)}{h}}\\\\\u0026=\\lim_{h \\to 0}{\\frac{(f(x+h)-f(x))+(g(x+h)-g(x))}{h}}\\\\\u0026=\\lim_{h \\to 0}{\\frac{f(x+h)-f(x)}{h}}+{\\frac{g(x+h)-g(x)}{h}}\\\\\u0026=f^{\\prime}(x)+g^{\\prime}(x)\\end{aligned}$$\n\u003e \n\u003e 这就证完了！\n\n---\n\u003e [选读] 乘法求导公式的证明  \n\u003e 要证明对两个函数$f(x)$和$g(x)$，可以推出$(f(x)g(x))^{\\prime}=f^{\\prime}(x)g(x)+f(x)g^{\\prime}(x)$。  \n\u003e 还是写出$(f(x)g(x))^{\\prime}$的求导式子：\n\u003e \n\u003e $$(f(x)g(x))^{\\prime}=\\lim_{h \\to 0}{\\frac{f(x+h)g(x+h)-f(x)g(x)}{h}}$$\n\u003e \n\u003e 呃，这里不太好办了……只有两项，怎么玩它呢？  \n\u003e **其实可以试试「凑项」！**具体来说，就是加一个什么东西，再减去它，这样式子依然不会变，就像$123+1-1$还是$123$一样！  \n\u003e \n\u003e 我们这里要凑进去的是$f(x+h)g(x)$，详细地说就是凑成下面这样：  \n\u003e \n\u003e $$\\begin{aligned}(f(x)g(x))^{\\prime}\\\\\u0026=\\lim_{h \\to 0}{\\frac{f(x+h)g(x+h)-f(x)g(x)}{h}}\\\\\u0026=\\lim_{h \\to 0}{\\frac{f(x+h)g(x+h)-f(x+h)g(x)+f(x+h)g(x)-f(x)g(x)}{h}}\\\\\u0026=\\lim_{h \\to 0}{\\frac{f(x+h)(g(x+h)-g(x))+(f(x+h)-f(x))g(x)}{h}}\\\\\u0026=\\lim_{h \\to 0}{f(x+h)\\frac{g(x+h)-g(x)}{h}}+\\frac{f(x+h)-f(x)}{h}g(x)\\\\\u0026=f(x+h)g^{\\prime}(x)+f^{\\prime}(x)g(x)\\end{aligned}$$\n\u003e \n\u003e 注意，**h是无限趋近于0的，所以上式也就是**$f(x)g^{\\prime}(x)+f^{\\prime}(x)g(x)$**了。**\n\u003e\n\n\nPS：这两个证明乍一看很麻烦，但是自己动手写一遍，你会发现还挺简洁的……\n\n---\n\n2023年2月13日更新：啊，迟来的更新！\n\n到这里为止，我们已经介绍了含有加法和乘法的导数计算，总结一下：\n\n1. 对于加法，我们可以用加法求导公式：\n  $\\begin{aligned}(f(x)+g(x))^\\prime\u0026=f^{\\prime}(x)+g^{\\prime}(x)\\end{aligned}$；\n2. 对于乘法，我们可以用乘法求导公式：  \n  $\\begin{aligned}(f(x)g(x))^{\\prime}\u0026=f^{\\prime}(x)g(x)+f(x)g^{\\prime}(x)\\end{aligned}$。\n\n接下来是减法和除法。加法和减法是一对同胞兄弟，掌握了带加法的求导，带减法的求导就非常顺理成章了：\n\n$$(f(x)-g(x))^\\prime=f^{\\prime}(x)-g^{\\prime}(x)$$\n\n为什么是这样呢？因为减法可以转化为加法，比如$3-2=3+(-2)$，所以和加法的求导公式非常类似，只不过是把加号换成了减号而已。\n\n更严格的证明可以这么想：利用负数，我们就可以把减法全部变成加法：\n\n$$f(x)-g(x)=f(x)+(-1)\\times g(x),$$\n\n而这时就可以利用加法求导公式了。\n\n\u003e 如果你问 $\\left[(-1)\\times g(x)\\right]'$ 是什么，不妨再看看 1.5.2 节给你的简单实用的公式？  \n\u003e （然后你就会知道 $\\left[(-1)\\times g(x)\\right]'=-1\\times g'(x)=-g'(x)$ 了。要时常回顾之前学过的东西哦！）\n\n只要利用一下加法求导公式，其实就已经得到上面的减法求导公式了。这样，四则运算里的三个求导公式就都证明完了！\n\n然而，除法这个看起来平平无奇的运算，求导却是最难的。为了证明它，上面所有的知识甚至都还不够，我们还需要用到一个（刚刚提了一嘴的）新概念：**复合函数**。下一节我们就来讲讲复合函数和它的求导。\n\n### 1.5.5 复合函数的导函数\n\n你也许火急火燎地翻过了上面的证明，想要知道复合函数的求导公式是什么。在了解求导公式之前，我们先来看看复合函数是什么。\n\n最直观地说，复合函数就是把一个函数「塞」到另一个函数里面去，然后把它们合并成一个新的函数。\n\n比如，我们把函数$f(x)=x^2$「塞」到函数$g(x)=x+1$里面去，就得到了一个新的函数$h(x)=g(f(x))=x^2+1$。这个新函数$h(x)$就被称为$f(x)$和$g(x)$的复合函数。\n\n这里，$f(x)$替代了$g(x)$的式子里的$x$的位置，所以才写成了$g(f(x))$。意思就是：**$g$这个因变量，它的自变量现在不叫$x$了，而是全部替换成$f(x)$**。既然 $g(x)$ 是\n\n$$g(x)=x+1,$$\n\n那$g(f(x))$的式子理应是：\n\n$$g(f(x))=f(x)+1.$$\n\n既然 $f(x)=x^2$，那么$g(f(x))$的式子就进一步可以代换成：\n\n$$g(f(x))=x^2+1.$$\n\n有人可能会问：你把自变量从$x$换成了$f(x)$，那原来的因变量 $g$ 不就变了吗？这么说对也不对。\n\n\u003e **\\[提示\\]**\n\u003e\n\u003e 下面这一部分是对函数的深入讲解，如果你觉得有些难以理解，可以先跳过，等到后面再回来看。\n\n在高等数学里，我们不再提「因变量」和「自变量」这两个概念了，而是用「函数」和「变量」来代替。**函数的括号里一定是一个字母吗？未必。函数括号里的就得是一个变量吗？也未必。**我们已经见过很多种写法：\n\n1. $f(x)$：代表一个**函数**，它的自变量是$x$；\n2. $f(1)$：代表令函数$f(x)$的自变量$x$等于1时的**函数值**；\n3. $f(g(x))$：代表令函数$f(x)$的自变量$x$等于另一个函数$g(x)$时的**函数**。\n\n说白了，函数只是一个黑盒子，你不清楚里面的计算过程，只能往里面塞一个东西，然后得知它计算出的东西。\n\n它的括号里是你可以塞进去的东西，你想塞什么都可以。你塞进去一个变量 $x$，根据计算结果就知道这个函数和 $x$ 有什么关系了；你塞进去一个函数 $g(x)$，根据计算结果就知道这个函数和 $g(x)$ 有什么关系了；你塞进去一个值 $1$，根据计算结果就知道这个函数和 $1$ 有什么关系了。\n\n注意，这里的「计算结果」并不一定和你塞进去的东西直接有关系。不是说你塞进去值就一定得到值，也不是说塞进去变量就一定还是函数。比如这个函数：$f(x)=x^2+y$。把 1 塞进去，你会得到：\n\n$$f(1)=1^2+y=1+y.$$\n\n你可能会奇怪：$f(1)$ 怎么不是一个数字，而是含有一个未知字母 $y$ 的式子呢？这也能被称为一个函数吗？答案是：当然可以。函数这个黑盒子只能保证两条规则：\n\n1. **你塞进去一个未知量，就一定能得知黑盒子的全貌。**比如你塞进去一个变量 $x$，就能得知这个函数和其他任何量有什么关系，也清楚明白地知道黑盒子的运作原理了：$f$ 其实就是把塞进去的东西平方，然后再加上一个未知量 $y$ 嘛！\n2. **它计算出的东西一定是一个式子。**当然，这个式子里可能有整数，有小数，有加减乘除，甚至有未知量，但它一定是一个式子。除此之外，函数不会给你任何保证。**你塞进去一个值，它或许会给你一个值，也或许会给你一个式子。**\n\n这就是为什么我们可以写出$g(f(x))$这种东西的原因。$g$是一个黑盒子，我们把$f(x)$塞给它（或者说，把$x^2$塞给它），它根据和塞给它$x$时一样的工作原理，计算出了一个式子。这个式子里有一个未知量 $x$，所以我们说$g(f(x))=x^2+1$。\n\n---\n\n回归正题，讲讲复合函数的求导。这个求导公式是：\n\n$$\\left[g(f(x))\\right]'=g'(f(x))f'(x).$$\n\n这个公式的意思是：**复合函数的导数等于里面的函数的导数乘以外面的函数的导数。**\n\n啊，又是一个和乘法求导公式一样拗口的公式！\n\n\u003e [选读] 复合函数求导公式的证明\n\u003e \n\u003e 它的证明过程也是很复杂的，考虑到网上两三步证完的基本都是错误证明（包括高中课本上的），而在严格的分析法里需要考虑诸多细节，可能你也不想看（即便是高中数学水平，硬着头皮也未必能看懂），所以这里只能扔个链接给你：[复合函数求导公式的证明](https://www.zhihu.com/question/57712227)，如果闲着没事，可以看看。\n\u003e\n\u003e PS：说复杂，其实也不复杂，主要是有很多边边角角的情况需要分类讨论，每一种单独证明，因此汇成了一篇长篇大论……\n\n\n不过，这个公式的意思其实很简单。我们继续说上面$f(x)=x^2, g(x)=x+1$的例子。要分几步走来计算：\n\n1. 先计算$f(x)$的导数，得到$f'(x)=2x$；\n2. 再计算$g(x)$的导数，得到$g'(x)=1$；\n3. 然后计算$g'(f(x))$，得到$g'(f(x))=1$（因为 $g'(x)$ 是一个常函数，你把 $x$ 换成任何值，它都给你 $1$！）；\n4. 最后，计算$g'(f(x))f'(x)$，得到$g'(f(x))\\times f'(x)=1\\times 2x=2x$；\n5. 所以，最终的答案是$\\left[g(f(x))\\right]'=2x$。\n\n这个结果和我们直接对$g(f(x))=x^2+1$等式右边的$x^2+1$求导数的结果是一样的。\n\n---\n\n现在，让我们再试试前一节的问题：$(x+2)^{11}$的导数是多少？我们可以把它**拆**成复合函数的形式：\n\n$$f(x)=x+2, g(x)=x^{11},$$\n\n那么$g(f(x))$就是$(x+2)^{11}$。这下我们只要计算$g(f(x))$这个复合函数的导数就可以了：\n\n1. 先计算$f(x)$的导数，得到$f'(x)=1$；\n2. 再计算$g(x)$的导数，得到$g'(x)=11x^{10}$；\n3. 然后计算$g'(f(x))$，得到$g'(f(x))=11(x+2)^{10}$；\n4. 最后，计算$g'(f(x))f'(x)$，得到$g'(f(x))\\times f'(x)=11(x+2)^{10}\\times 1=11(x+2)^{10}$；\n5. 所以，最终的答案是$\\left[g(f(x))\\right]'=11(x+2)^{10}$。\n\n这样，我们就把复合函数的求导问题转化成了两个简单的函数求导问题，然后几步就完成了这个函数的求导。**化繁为简，这就是复合函数的求导的核心意义。**\n\n\n### 1.5.6 导函数的除法运算\n\n虽然除法和乘法也是一对反义词，但它们的求导公式是完全不同的。除法的求导可以说是最难的，所以我们单独拿出来讲。\n\n它为什么困难呢？上面我们证明减法求导的时候，是把减法转化成加法和乘负一（更「专业」的说法是乘 *相反数* ，如果你学过这个词的话），然后利用加法求导公式得到的。你肯定很容易想到：那么，除法求导的时候，我们是不是可以把除法转化成乘法和乘一个什么东西呢？\n\n答案是：不可以。**首先我们要知道，运算是有好几个不同层次的，最低级的是加减，而乘除是比它们俩高一层的。** 注意注意！看「减法可以转化成加法和乘负一」这句话里的几个词：\n\n\u003ccenter\u003e**减**法可以转化成**加**法和**乘**负一\u003c/center\u003e\n\n这里的「**减**」和「**加**」是相对应的，而「**乘**」是**比加减更高一层**的计算！\n\n而我们想象的：\n\n\u003ccenter\u003e**除**法可以转化成**乘**法和**乘**一个什么东西\u003c/center\u003e\n\n这里的「**除**」和「**乘**」是相对应的，但是「**乘**」不是**比乘除更高一层**的计算！\n\n所以，想要对应上前一节的思考方式，也应该是：\n\n\u003ccenter\u003e**除**法可以转化成**乘**法和 **XXX** 一个什么东西\u003c/center\u003e\n\n其中的「XXX」必须得是一种比乘除法还要高一层的计算才合理。\n\n这个超高级的计算是什么呢？就是**幂运算**！所以，除法求导的时候，我们应当把除法转化成乘法和乘一个幂运算的结果：\n\n\u003ccenter\u003e**除**法可以转化成**乘**法和对负一的**幂**运算\u003c/center\u003e\n\n或者用更简单的数学语言来说，就是：\n\n$$\\frac{f(x)}{g(x)}=f(x)\\times \\left[g(x)\\right]^{-1}.$$\n\n\u003e **注意**\n\u003e\n\u003e $\\left[g(x)\\right]^{\\text{xxx}}$ 我们习惯上简写成 $g^{\\text{xxx}}(x)$，这里用方括号括起来是方便你理解的。后面我们就不再用方括号，直接写成 $g^{\\text{xxx}}(x)$ 了。\n\n接下来让我们仿照算减法求导公式时的做法，利用一下乘法求导公式！我们知道，**乘法的规则是对第一个式子求导，乘第二个；再对第二个式子求导，乘第一个。然后加起来**。\n\n「对第一个式子求导，乘第二个」是：\n\n$$f^{\\prime}(x)\\times g^{-1}(x),$$\n\n唔，这部分看起来很简单嘛！\n\n「对第二个式子求导，乘第一个」是：\n\n$$f(x)\\times \\left[g^{-1}(x)\\right]',$$\n\n新问题又来了，这里的 $g^{-1}(x)$ 怎么求导呢？我们好像没有学过这个东西啊！\n\n别急，再想想，既然气氛都烘托到这了，肯定是有办法的。\n\n我们到底在哪里提过关于幂的求导呢？  \n我们到底在哪里提过关于幂的求导呢？  \n我们到底在哪里提过关于幂的求导呢？\n\n在继续之前，请你再三思考一下，翻一翻之前的内容，看看有没有提到过，然后再往下看。\n\n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n。  \n\n没错，还是在 1.5.2 节给你的简单实用的公式表里面，有关于幂的求导公式，而且当时我们还叫它「**初等函数大杀器**」呢：\n\n$$(ax^n)'=nax^{n-1}.$$\n\n这个式子是说，对于 $ax^n$ 这个式子，它的导数是 $nax^{n-1}$。比如，对于 $x^2$，它的导数是 $2x^{2-1}$；对于 $2x^3$，它的导数是 $2\\times 3x^{3-1}$。\n\n所以，看起来我们可以对于 $[g(x)]^{-1}$ 用上面的公式求导。有个小问题是：$g(x)$ 并不是 $x$ 啊？那我们怎么用呢？\n\n这里要用到我们的另一个大杀器了：**复合函数**。我们可以令 $f(x)=x^{-1}$，**那 $[g(x)]^{-1}$ 不就是 $f(g(x))$ 了吗？**\n\n来试试看！我们把复合函数的求导公式代入进去。首先计算 $f(x)$ 的导数：\n\n$$f'(x)=\\left(x^{-1}\\right)'=-1\\times x^{-2} = -x^{-2}.$$\n\n注意，这里的 $x^{-2}$ 其实就是 $\\frac{1}{x^2}$，所以 $f'(x)=-\\frac{1}{x^2}$。那么，$f'(g(x))=-\\frac{1}{g^2(x)}$。\n\n所以呢，我们可以继续按照复合函数的求导公式来计算：\n\n$$\n\\begin{aligned}\n\\left(\\left[g(x)\\right]^{-1}\\right)'\u0026=[f(g(x))]'\\\\\n\u0026=f'(g(x))g'(x)\\\\\n\u0026=-\\frac{1}{g^2(x)}\\times g'(x)\\\\\n\\end{aligned}\n$$\n\n看起来我们终于解决了 $[g(x)]^{-1}$ 的导数，它就是 $-\\frac{1}{g^2(x)}g'(x)$。耶✌！\n\n乘胜追击，让我们完成这个绕了山路十八弯的除法求导公式。「对第二个式子求导，乘第一个」现在就是：\n\n$$f(x)\\times \\left[g^{-1}(x)\\right]'=-f(x)\\frac{1}{g^2(x)}g'(x).$$\n\n所以，最终的除法求导公式是把它和「对第一个式子求导，乘第二个」加起来，也就是下面两个加起来：\n\n$$-f(x)\\frac{1}{g^2(x)}g'(x)+f^{\\prime}(x)\\times g^{-1}(x)$$\n\n经过一串草稿纸上的暴力分母通分，我们得到了最终的除法求导公式：\n\n$$\\left[\\frac{f(x)}{g(x)}\\right]'=\\frac{f^{\\prime}(x)g(x)-f(x)g^{\\prime}(x)}{g^2(x)}.$$\n\n真是「道路阻且长」啊。折腾了这么多得到的除法公式，结果还这么复杂，大概可以排进我们心目中「我最讨厌的导数公式」前三名了吧？\n\n---\n\n再小结一下，到目前为止，我们已经学会了求导的以下几种方法：\n\n1. 一些通用的求导公式\n2. 加减乘除的求导公式\n3. 复合函数的求导公式\n\n对于水平稍高的同学，现在已经可以回头完成我们的「五年高考，三年模拟」了。快去试试吧（笑）下次更新会公布正确答案。\n\nPS：下一次更新将在本周内，敬请期待~\n\n\n\n  [1]: \n  [2]: \n  [3]: https://s1.ax1x.com/2018/03/21/97iVQP.png\n  [4]: https://s1.ax1x.com/2018/03/21/97qOl4.png\n  [5]: https://s1.ax1x.com/2018/03/21/97LKtf.png\n  [6]: https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/w=268/sign=9ef5303c01e9390156028a3843ec54f9/35a85edf8db1cb13ab78b40fdd54564e92584b9d.jpg\n  [7]: https://s1.ax1x.com/2018/03/21/97LqEt.png\n  [8]: https://s1.ax1x.com/2018/03/21/97OwVI.png\n  [9]: https://s1.ax1x.com/2018/03/21/97OrPf.png\n  [10]: https://s1.ax1x.com/2018/03/24/9qGzQI.png\n  [11]: https://s1.ax1x.com/2018/03/24/9qJSyt.png\n  [12]: https://s1.ax1x.com/2018/03/24/9qJPw8.png\n  [13]: https://s1.ax1x.com/2018/03/24/9qJkFg.png\n  [14]: https://s1.ax1x.com/2018/03/24/9qJeln.png\n  [15]: https://s1.ax1x.com/2018/03/24/9qJkFg.png\n  [16]: https://s1.ax1x.com/2018/03/21/97LKtf.png\n  [17]: https://s1.ax1x.com/2018/09/15/iVKj1g.png\n  [18]: https://s1.ax1x.com/2018/10/07/iGwWtg.png\n  [19]: https://s1.ax1x.com/2018/10/07/iGwIcn.png\n  [20]: https://s1.ax1x.com/2018/10/07/iGwLAU.png\n  [21]: https://s1.ax1x.com/2018/10/07/iG0V9H.png\n  [22]: https://s1.ax1x.com/2018/11/11/iq0iIP.png\n  [23]: https://z3.ax1x.com/2021/11/21/IXnxVx.png","cover":"images/roman-mager-59976-unsplash.jpg","link":"calculus-1st.html","preview":"\u003cp\u003e可能是最简单易懂的微积分打开方式\u003c/p\u003e\n","title":"零基础微积分入门基本教程"},{"content":"\n![Photo by Pathum Danthanarayana on Unsplash](images/pathum-danthanarayana-466070-unsplash.jpg)\n# 2020年更新！\n注意，经测试发现，该方法必须在每一次调用`queueInputBuffer`方法时，写入的恰好是**一个或多个**完整的 mp3 帧，否则该数据块的解析结果将是空的，因此**这个方案根本不能用！可以不用往下看了，直接用`lame`库解决吧！**\n \n# 前因\n最近在写一个项目，需要对大量MP3文件进行解码，并输出PCM文件。  \n百度了一下，发现Android上提供了一些可以直接进行解码的类，很方便。\n# 过程\n主要需要用到的是[`MediaExtractor`](https://developer.android.google.cn/reference/android/media/MediaExtractor)和[`MediaCodec`](https://developer.android.google.cn/reference/android/media/MediaCodec)。  \n![Media Codec工作周期](images/mediacodec.png)\n`MediaExtractor`在Android Developer上的解释是  \n\n\u003e MediaExtractor facilitates extraction of demuxed,   \n\u003e typically encoded, media data from a data source.   \n\u003e 翻译:  \n\u003e MediaExtractor帮助从数据源中提取解复用的，  \n\u003e 通常编码的媒体数据。  \n\n这个类可以帮助我们获取mp3文件的信息(例如比特率、位数、轨道数等)，还可以按帧提取mp3的数据(但并不解码)。我们主要使用的是后一个功能。  \n   \n接下来，我们需要对输入的文件进行数据抽取的预处理。  \n思路是先用`MediaExtractor`获得媒体文件的音频轨道(mp3文件一般只有一个)，然后用`selectTrack`指定该轨道。  \n代码如下：\n```\n        MediaExtractor mediaExtractor = new MediaExtractor();\n        MediaCodec mediaCodec = null;\n        mediaExtractor.setDataSource(getContext().getResources().openRawResourceFd(R.raw.mp3).getFileDescriptor()));\n        int trackCount = mediaExtractor.getTrackCount();\n        for (int i = 0; i \u003c trackCount; ++i) {\n            MediaFormat format = mediaExtractor.getTrackFormat(i);\n            String mineType = format.getString(MediaFormat.KEY_MIME);\n\n            if (mineType.startsWith(\"audio\")) {\n                mediaExtractor.selectTrack(i);\n```\n然后，创建并启动`MediaCodec`，准备开始传入编码的数据。  \n```\n                mediaCodec = MediaCodec.createDecoderByType(mineType);\n                mediaCodec.configure(format, null, null, 0);\n                break;\n            }\n        }\n        mediaCodec.start();\n```\n接下来，定义一个`readData`，用于向指定的`ByteBuffer`中写入读取的数据：\n```\nprivate int readData(MediaExtractor extractor, ByteBuffer buffer, int size) {\n        int totalSize = 0;\n        do {\n            int sampleSize;\n            if (Build.VERSION.SDK_INT \u003c Build.VERSION_CODES.LOLLIPOP) {\n                sampleSize = extractor.readSampleData(buffer, totalSize);\n            } else {\n                sampleSize = extractor.readSampleData(buffer, 0);\n            }\n            if (sampleSize \u003c 0) {\n                return totalSize;\n            }\n            totalSize += sampleSize;\n            //Advance to the next sample.\n            extractor.advance();\n        } while (totalSize \u003c size);\n        return totalSize;\n    }\n```\n需要注意的是，对于`Android Lollipop`及以后的版本，`readSampleData`的第二个参数必须是`0`，数据会自动填充到末尾。  \n\n---\n接下来的，是真正的解码过程。解码过程比较麻烦，具体概括为如下几步：  \n\n1. 获取`MediaCodec`的输入/输出`ByteBuffer`数组。\n2. 调用`dequeueInputBuffer`方法，获取下一次输入所使用的`ByteBuffer`在数组中的索引。\n3. 调用`readData`向该`ByteBuffer`中读取一段mp3数据。\n4. 调用`queueInputBuffer`方法，将这个`ByteBuffer`加入解码队列中，进行真正的解码过程。\n5. 调用`dequeueOutputBuffer`方法，获取下一次解码完成的数据所使用的`ByteBuffer`在数组中的索引。\n6. 将这个`ByteBuffer`内的数据读出，即为一个PCM片段。\n7. 调用`releaseOutputBuffer`释放该`ByteBuffer`。\n8. 循环5~7步，直到请求不到输出，这意味着当前已经没有解码的数据了。\n9. 不断循环以上1~8步，拼接PCM片段，直到解码全部完成。\n\n完整的解码代码如下：\n```java\nprivate boolean decode(MediaCodec codec, MediaExtractor extractor) throws IOException {\n        ByteBuffer[] inputDatas = codec.getInputBuffers();\n        ByteBuffer[] outputDatas = codec.getOutputBuffers();\n\n        MediaCodec.BufferInfo bufferInfo = new MediaCodec.BufferInfo();\n        //Get the max input size.\n        int size = DEFAULT_BUFFER_SIZE;\n        if (Build.VERSION.SDK_INT \u003e= Build.VERSION_CODES.LOLLIPOP) {\n            size = codec.getInputFormat().getInteger(MediaFormat.KEY_MAX_INPUT_SIZE);\n        }\n        for (int i = 0; i \u003c inputDatas.length - 1; ++i) {\n            int inputIndex = codec.dequeueInputBuffer(-1);\n            if (inputIndex \u003c 0) {\n                return true;\n            }\n            //Input data\n            ByteBuffer inputBuffer = inputDatas[inputIndex];\n            inputBuffer.clear();\n            //Request mp3 data chunk.\n            int sampleSize = readData(extractor, inputBuffer, size);\n            if (sampleSize \u003c= 0) {\n                return true;\n            } else {\n                //Have it decoded.\n                codec.queueInputBuffer(inputIndex, 0, sampleSize, 0, 0);\n                decodeSize += sampleSize;\n                System.out.println(\"decode size:\" + sampleSize + \",total size:\" + decodeSize);\n            }\n            //Get output buffer\n            int outputIndex = codec.dequeueOutputBuffer(bufferInfo, TIMEOUT);\n            ByteBuffer outputBuffer;\n            byte[] chunkPCM;\n            while (outputIndex \u003e= 0) {\n                outputBuffer = outputDatas[outputIndex];\n                chunkPCM = new byte[bufferInfo.size];\n                outputBuffer.get(chunkPCM);\n                outputBuffer.clear();\n                //Write to a byte array.\n                pcmData.write(chunkPCM);\n\n                codec.releaseOutputBuffer(outputIndex, false);\n                //Get next PCM chuck.\n                outputIndex = codec.dequeueOutputBuffer(bufferInfo, TIMEOUT);\n            }\n        }\n        //Have not decoded the whole file.\n        return false;\n    }\n```\n这个方法调用起来也很简单，不断调用直到返回`true`为止。\n```\nwhile (!decode(mediaCodec, mediaExtractor)) {\n            //Do nothing.\n            //Wait for decoding.\n}\n```\n然后解码就完成了。  \n\n---\n完整的类源代码如下：\n```\n/**\n * Created by w568w on 18-9-15.\n *\n * @author w568w\n */\n\npublic class MP3ToPCM {\n    private int decodeSize = 0;\n    private ByteArrayOutputStream pcmData;\n    private static final int TIMEOUT = 10 * 1000;\n    private static final int DEFAULT_BUFFER_SIZE = 4096;\n\n    /**\n     * @param fileDescriptor Input MP3 File\n     * @return PCM data\n     * @throws IOException when decoding failed or opening the file failed.\n     */\n    @WorkerThread\n    public byte[] convert(FileDescriptor fileDescriptor) throws IOException {\n        pcmData = new ByteArrayOutputStream();\n        MediaExtractor mediaExtractor = new MediaExtractor();\n        MediaCodec mediaCodec = null;\n        mediaExtractor.setDataSource(fileDescriptor);\n        int trackCount = mediaExtractor.getTrackCount();\n        for (int i = 0; i \u003c trackCount; ++i) {\n            MediaFormat format = mediaExtractor.getTrackFormat(i);\n            String mineType = format.getString(MediaFormat.KEY_MIME);\n\n            if (mineType.startsWith(\"audio\")) {\n                mediaExtractor.selectTrack(i);\n                mediaCodec = MediaCodec.createDecoderByType(mineType);\n                mediaCodec.configure(format, null, null, 0);\n                break;\n            }\n        }\n        if (mediaCodec == null) {\n            return null;\n        }\n        mediaCodec.start();\n\n        while (!decode(mediaCodec, mediaExtractor)) {\n            //Do nothing.\n            //Wait for decoding.\n        }\n\n        byte[] pcmByteData = pcmData.toByteArray();\n        pcmData.close();\n        pcmData = null;\n        return pcmByteData;\n    }\n\n    private int readData(MediaExtractor extractor, ByteBuffer buffer, int size) {\n        int totalSize = 0;\n        do {\n            int sampleSize;\n            if (Build.VERSION.SDK_INT \u003c Build.VERSION_CODES.LOLLIPOP) {\n                sampleSize = extractor.readSampleData(buffer, totalSize);\n            } else {\n                sampleSize = extractor.readSampleData(buffer, 0);\n            }\n            if (sampleSize \u003c 0) {\n                return totalSize;\n            }\n            totalSize += sampleSize;\n            //Advance to the next sample.\n            extractor.advance();\n        } while (totalSize \u003c size);\n        return totalSize;\n    }\n\n    private boolean decode(MediaCodec codec, MediaExtractor extractor) throws IOException {\n        ByteBuffer[] inputDatas = codec.getInputBuffers();\n        ByteBuffer[] outputDatas = codec.getOutputBuffers();\n\n        MediaCodec.BufferInfo bufferInfo = new MediaCodec.BufferInfo();\n        //Get the max input size\n        int size = DEFAULT_BUFFER_SIZE;\n        if (Build.VERSION.SDK_INT \u003e= Build.VERSION_CODES.LOLLIPOP) {\n            size = codec.getInputFormat().getInteger(MediaFormat.KEY_MAX_INPUT_SIZE);\n        }\n        for (int i = 0; i \u003c inputDatas.length - 1; ++i) {\n            int inputIndex = codec.dequeueInputBuffer(-1);\n            if (inputIndex \u003c 0) {\n                return true;\n            }\n            //Input data\n            ByteBuffer inputBuffer = inputDatas[inputIndex];\n            inputBuffer.clear();\n            //Request mp3 data chunk.\n            int sampleSize = readData(extractor, inputBuffer, size);\n            if (sampleSize \u003c= 0) {\n                return true;\n            } else {\n                //Get it decoded.\n                codec.queueInputBuffer(inputIndex, 0, sampleSize, 0, 0);\n                decodeSize += sampleSize;\n                System.out.println(\"decode size:\" + sampleSize + \",total size:\" + decodeSize);\n            }\n            //Get output buffer\n            int outputIndex = codec.dequeueOutputBuffer(bufferInfo, TIMEOUT);\n            ByteBuffer outputBuffer;\n            byte[] chunkPCM;\n            while (outputIndex \u003e= 0) {\n                outputBuffer = outputDatas[outputIndex];\n                chunkPCM = new byte[bufferInfo.size];\n                outputBuffer.get(chunkPCM);\n                outputBuffer.clear();\n                //Write to a byte array.\n                pcmData.write(chunkPCM);\n\n                codec.releaseOutputBuffer(outputIndex, false);\n                //Get next PCM chuck.\n                outputIndex = codec.dequeueOutputBuffer(bufferInfo, TIMEOUT);\n            }\n        }\n        //Have not decoded the whole file.\n        return false;\n    }\n}\n\n```\n# 问题\n存在的问题是，解码太慢。使用的测试代码是这样的：\n```\n/**\n * Created by w568w on 18-9-16.\n *\n * @author w568w\n */\n\npublic class MP3ToPCMTest extends AndroidTestCase {\n    private byte[] PCMdata;\n    private byte[] reSamplePCM;\n    private static final int reSample = 512;\n\n    public void testConvert() throws Exception {\n        CodeTimer.time(new ConvertThread());\n\n    }\n\n    public void testReSample() throws Exception {\n        CodeTimer.time(new ReSampleThread());\n    }\n\n    private class ConvertThread implements Runnable {\n\n        @Override\n        public void run() {\n            try {\n                PCMdata = new MP3ToPCM()\n\t\t\t\t\t\t.convert(getContext().getResources().openRawResourceFd(R.raw.mp3).getFileDescriptor());\n                System.out.println(\"size:\" + PCMdata.length);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n    private class ReSampleThread implements Runnable {\n\n        @Override\n        public void run() {\n            try {\n                reSamplePCM = new byte[PCMdata.length / reSample];\n                for (int i = 0; i \u003c PCMdata.length; i += reSample) {\n                    reSamplePCM[i / reSample] = PCMdata[i];\n                }\n                System.out.println(\"resample size:\" + reSamplePCM.length);\n            } catch (NullPointerException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n}\n```\n  \n`CodeTimer`是个简单的代码计时器，不再贴出代码。    \n整个解码过程需要将近1分钟的时间，显然在实际环境中是不可直接应用的。  \n目前的思路是换用`lame`或`ffmpeg`等解编码的原生支持库。或许了解这方面的朋友可以给我指点一二？","cover":"images/pathum-danthanarayana-466070-unsplash.jpg","link":"decoding-mp3.html","preview":"\u003cp\u003eAndroid上的媒体文件解码/编码并不是一件复杂的事。\u003c/p\u003e\n","title":"对于Android MP3解码为PCM的一些研究"},{"content":"\n![Photo by Chris Ried on Unsplash](images/chris-ried-512801-unsplash.jpg)\n# 前因\n最近学习不是很忙没，闲得蛋疼，决定完成一下学校布置的调查报告，顺便玩玩数据分析...  \n所以就有了这么一次关于新闻评论的简单调查。嗯我的编程水平蒟蒻，各位大佬轻喷(/ ω \\\\)\n# 数据收集\n\n第一件事当然是要收集到需要分析的新闻数据啦！  \n打算抓取[凤凰网](http://news.ifeng.com/)的评论，因为这里的人比较多，评论量比较大。  \n![凤凰网评论](images/fenghuang_comments.png)\n下一个问题是运行数据抓取程式的设备。  \n用自己的电脑跑Python脚本心疼电费，用手机跑的话需要下载[QPython](http://www.qpython.com/)，略显得有些麻烦...  \n  \n所幸，百度了一会儿，找到了一个[云爬虫平台](https://www.shenjian.io/)(我真的不是来打广告的！我发誓！)  \n注册后默认是个人免费版，赠送一个**永久免费爬虫节点**(不是SSR那种节点啊)以及1GB的储存空间，还支持**爬取中验证码识別、POST数据、自定义请求头部、自动更换代理、抗反爬虫**...  \n总的来说比较实惠...  \n![神箭手云平台-爬虫界面](images/shenjianshou_page1.png)\n这个平台里的爬虫逻辑是需要自己用编写的。提供了一个网页的代码编辑器，支持代码智能补全和高亮格式化。  \n开发文档也比较完善，而且预置了很多的API和回调函数，对于熟悉JavaScript语法的人来说，开发难度不大。   \n![神箭手云平台-开发界面](images/shenjianshou_page2.png)\n配合FireFox可以获得XPath，所以很快就写完了一个爬虫...\n```javascript\nvar configs = {\n  domains: [\"ifeng.com\"],\n  scanUrls: [\"http://news.ifeng.com/\"],\n  contentUrlRegexes: [/http:\\/\\/gentie\\.ifeng\\.com\\/view\\.html.+/], //内容页url正则\n  helperUrlRegexes: [/http:\\/\\/news\\.ifeng\\.com\\/a\\/\\d+\\/\\d+_\\d+\\.shtml/], //列表页url正则 可留空\n  enableJS: true,\n  \n  fields: [\n    {\n      // 抽取项\n      name: \"title\",\n      selector: \"//*[@id=\\\"js_title\\\"]\", //默认使用XPath\n      required: true //是否不能为空\n    },\n    {\n      name: \"talk\",\n      selector: \"//*[@class=\\\"mod-articleCommentList\\\"]\", \n      required: false, \n      repeated: true,//表示可以爬取多项\n      children: [\n        {\n          name: \"name\",\n\t\t  alias:\"用户名\",\n          selector: \"//*[@class=\\\"w-location\\\"]\"\n        },\n        {\n          name: \"content\",\n\t\t  alias:\"评论内容\",\n          selector: \"//*[@class=\\\"w-contentTxt\\\"]\"\n        },\n        {\n          name: \"goods\",\n          type: \"int\",\n\t\t  alias:\"点讚数\",\n          selector: \"//*[@class=\\\"w-rep-num\\\"]\"\n        }\n      ]\n    }\n  ]\n};\n\nvar crawler = new Crawler(configs);\ncrawler.start();//启动爬虫\n```\n接下来就是漫长的等待。  \n不过代码是在云端分布式节点上运行的，所以可以放心地去关机睡觉...\n# 数据处理\n第二天一大早就开机看看爬虫努力一晚上的结果。总的来说还可以，获取到了2000多条新闻的评论。  \n![神箭手云平台-爬取结果](images/shenjianshou_page3.png)  \n数据可以直接全部导出为 **XLSX(Microsoft Excel)、CSV(纯文本，用逗号分隔的表格)或者SQL (MySql数据库)文件，也可以选择直接发佈到Word Press、Discuz、typecho、Phpwind、微信公众号、远程MySql数据库**等网络平台，甚至提供了获取数据的**Rest API**和**GraphGL API**。  \n哭了，对开发者这样良心的网站真的不多.....   \n  \n由于我要用Python分析，因此选择导出数据为CSV。文件不大，才9MB不到的体积。  \n![神箭手云平台-导出数据](images/shenjianshou_page4.png)  \n很快地打开AS，把数据导入进去。\n![CSV文件](images/data_csv.png)  \n接下来是数据的预处理，直接贴代码吧：\n```python\n# coding:utf8\nimport csv\nimport json\nfrom collections import Counter\n\nimport jieba\n\n\ndef contains(l, item):\n    equals = lambda x, y: x[1] == y[1]\n    for i in l:\n        if equals(i, item):\n            return True\n    return False\n\n#去除重复\ndef del_repeated(liebiao):\n    new_list = []\n    for item in liebiao:\n        if contains(new_list, item) is False:\n            new_list.append(item)\n    return new_list\n\n\ndef read_list():\n    with open(\"task_data_2208900.csv\", 'rb') as f:\n        lines = csv.reader(f)\n        csv_list = []\n        for l in lines:\n\t\t#检查空项\u0026解码UTF-8的编码\n            if l[2].decode('utf8') != '':\n                csv_list.append([l[0].decode('utf8'), l[1].decode('utf8'), l[2].decode('utf8')])\n        del csv_list[0]\n        return del_repeated(csv_list)\n\n\ndata_list = read_list()#读取数据\nprint 'Data Size:', len(data_list)\n```\n输出:\n```\nData Size: 1831\n```\n  \n然后，就可以使用`jieba`、`Counter`之类的工具来分析数据啦！  \n  \n你可能没耐心看我的弱智代码，那就直接上——\n# 分析结果\n先给出分词结果排行，已经去除了单字和无意义字符（如\"我\"、\"我们\"、\"这个\"、\"的\"）：\n```python \n# 格式：\n# [词语] [词语频数]\nCopyright (C) w568w，遵循Creative Commons BY-NC 4.0协议，禁止不规范转载\n------------\n\n中国 560\n美国 372\n国家 163\n日本 140\n国人 127\n世界 103\n俄罗斯 85\n武器 80\n支持 78\n加油 70\n发展 68\n台湾 68\n人民 63\n问题 61\n导弹 59\n航母 59\n我国 55\n技术 51\n战斗 46\n印度 46\n阿弥陀佛 45\n祖国 44\n改变 44\n军事 44\n战争 44\n作战 42\n发动 41\n南海 40\n飞机 39\n发动机 39\n动机 39\n能力 38\n经济 37\n海军 36\n战略 36\n潜艇 35\n利益 32\n土耳其 31\n研发 30\n制造 29\n威胁 28\n战机 28\n强大 27\n和平 27\n轰炸 27\n历史 27\n装备 26\n致敬 26\n西方 26\n政府 25\n国海军 25\n国军 25\n努力 25\n观念 24\n战斗群 24\n鬼子 24\n民族 24\n孩子 24\n攻击 24\n工作 24\n安全 23\n美国佬 23\n建设 23\n百姓 22\n先进 21\n设计 21\n轰炸机 21\n科技 21\n中俄 21\n人员 21\n```\n顺便统计了一下地域分布：\n```python \n# 格式：\n# [地区] [地区频数]\nCopyright (C) w568w，遵循Creative Commons BY-NC 4.0协议，禁止不规范转载\n------------\n[广东省广州市网友] 140\n[北京市网友] 131\n[山东省济南市网友] 62\n[河南省郑州市网友] 54\n[江苏省南京市网友] 52\n[陕西省西安市网友] 48\n[湖北省武汉市网友] 45\n[上海市网友] 45\n[天津市网友] 44\n[浙江省杭州市网友] 42\n[湖南省长沙市网友] 38\n[四川省成都市网友] 35\n[河北省石家庄市网友] 33\n[辽宁省沈阳市网友] 33\n[云南省昆明市网友] 30\n[福建省福州市网友] 30\n[安徽省合肥市网友] 27\n[广西壮族南宁市网友] 27\n[江西省南昌市网友] 20\n[黑龙江省哈尔滨市网友] 18\n[江苏省苏州市网友] 17\n[广东省,广州市网友] 16\n[吉林省长春市网友] 16\n[山西省太原市网友] 15\n[湖北省宜昌市网友] 14\n[湖北省,武汉市网友] 14\n[山东省,济南市网友] 14\n[贵州省贵阳市网友] 11\n[重庆市网友] 11\n[宁夏回族银川市网友] 11\n[海南省海口市网友] 10\n[广东省深圳市网友] 9\n[福建省厦门市网友] 9\n[四川省,成都市网友] 9\n[浙江省宁波市网友] 9\n[河北省,石家庄市网友] 9\n[安徽省,合肥市网友] 9\n[内蒙古呼和浩特市网友] 8\n[浙江省台州市网友] 8\n[广东省中山市网友] 7\n[江苏省常州市网友] 7\n[江苏省无锡市网友] 7\n[浙江省,杭州市网友] 7\n[黑龙江省大庆市网友] 7\n[湖南省邵阳市网友] 5\n[河南省,郑州市网友] 5\n[辽宁省,沈阳市网友] 5\n[新疆维吾尔乌鲁木齐市网友] 5\n[广东省佛山市网友] 5\n[福建省,福州市网友] 5\n[湖南省衡阳市网友] 5\n[山西省晋城市网友] 5\n```\n根据以上数据，我总结出了：\n# 关注热点Top5\n## 1. 中美关系\n无论啥时候，川普的小动作都是个大新闻..中美关系是个永恒不变的国际话题。\n## 2. 中日关系\n中日关系由于历史原因一直非常紧张，更不要说各种\"爱国主义教育\"薰陶下的我国人民了...  \n这里稍微看了一下评论，有一些比较偏激：\n```\n那个核弹，干脆给日本使上吧！！！\n跟日本绝交！还废什末话友好下去，最好定出法律不准去日本！不准购日货！！\n日本人一说总是感觉到猥琐，下流。\n什么是大个儿的？？？意思小日本充当王八！\n日本就是美国圈养的一条狗！美国到哪它都跟随在后面吠\n```\n不作评论。\n## 3.台湾问题\n主要是有关于蔡英文的报道...感觉还是比较客观冷静的，没有那么多不堪入耳的人身攻击。\n## 4.中印冲突\n评论中多以\"阿三\"称印度反动势力。我不是特別关心这方面的问题，中国应该是佔绝对优势吧。\n## 5.军事力量\n果然大家关心比较多的还是我国的军事势力，主要围绕航母、导弹力量展开。  \n[这里](https://www.globalfirepower.com/countries-listing.asp)有一个比较权威的世界军事力量排名。\n# 最后...\n讲个笑话，写爬虫、分析数据花了我30分钟，但是写这篇文章花了我2个小时....大概这就是打字速度慢的痛苦吧(笑)","cover":"/images/chris-ried-512801-unsplash.jpg","link":"fenhuang_stat.html","preview":"\u003cp\u003e一次Python练手\u003c/p\u003e\n","title":"从一次新闻统计概览我国新闻关注热点"},{"content":"\n![Photo by Sai Kiran Anagani on Unsplash](images/sai-kiran-anagani-555972-unsplash.jpg)\n# 引子\n今天作死Commit的时候，不小心把自己的Ket Store和密码push到Github上去了...  \n发现Github上没有回滚Commit选项时，吓了一跳，以为撤回不了自己的骚操作了，遂百度之，  \n  \n然后，我发现了一片Git的新天地...原来，Git真心这么强大！\n# 我擦，随手Push上去了?!\n可能你和我有过类似的经历，把奇怪的文件Push到远程，然后又想办法撤回。其实，Git为我们提供了非常简单的操作来撤回到任何状态，只需要三个指令，就可以无损撤回Commit。  \n首先，在项目目录打开终端。你可以用`git log`查看历史提交，看起来大概这样：  \n```\n$ git log\ncommit ad8bcddd03f25904de27e830e12d22e79ba61e44\nAuthor: w568w \u003c1278297578@qq.com\u003e\nDate:   Sat Apr 28 21:05:43 2018 +0800\n\n    Add error catching\n\ncommit 5eb7444126ef10f3bcd1a9daca7b81051d9533df\nAuthor: w568w \u003c1278297578@qq.com\u003e\nDate:   Sat Apr 28 21:03:23 2018 +0800\n\n    Add error-catching for the module's self-checking.\n```\n比如说想回到`5eb7444126ef10f3bcd1a9daca7b81051d9533df`这个状态，也就是撤回最后一次提交，记下这个对应的SHA-256值，然后按`q`键退出vim。  \n然后，使用`git reset`来重定向`HEAD`指针：\n\n```\n如果你要连着本地文件一块儿撤回(也就是删除本地文件)：\n$ git reset --hard 5eb7444126ef10f3bcd1a9daca7b81051d9533df \n如果你只要撤回远程(本地文件不动)：\n$ git reset --soft 5eb7444126ef10f3bcd1a9daca7b81051d9533df \n```\n\u003e Tips：这里要退到上一个，所以可以简写成：\n ```\n$ git reset --hard HEAD~1\n或者\n$ git reset --soft HEAD~1\n```\n\n最后，用`-f`无视版本问题，强制推到远程，问题解决！\n```\n$ git push -f\n```\n# 我擦，不小心用了 --hard ?!\n刚开始撤回时我就遇到了这个问题...由于没搞懂`--hard`和`--soft`的区別...  \n结果撤回时连着本地文件一块儿没了...  \n擦，这下没辙了？代码又得重写了？  \n  \n其实万能的Git还有办法，而且只需要两行指令。  \n  \n首先使用`git reflog`来查看`HEAD`指针变动日志：\n```\n$ git reflog\n4ba77dc HEAD@{1}: reset: moving to 5eb7444126ef10f3bcd1a9daca7b81051d9533df\nad8bcdd HEAD@{2}: commit: Add error catching\n5eb7444 HEAD@{3}: commit: Add error-catching for the module's self-checking.\n```\n可以看到，第一条记录就是上一节里撤回时的操作。\n我要让所有文件回到`commit: Add error catching`还没推送到远程时的状态，因此直接执行：\n```\n$ git reset --hard ad8bcdd\nHEAD 现在位于 ad8bcdd Add error catching\n```\n问题解决！文件都回来了！  \n# 总结\n可以看到，Git的强大的确不是吹的。只要不是作死删库的命令（~~`reset --hard 0`，`push -f`上去再反手一个`gc`什么的，別瞎jb试~~），几乎[无所不能撤回](http://mobile.51cto.com/hot-481240.htm)。  \n因此，经常~~和我一样~~手贱的小伙伴们的确很需要使用`Git`来管理自己的公共/私有项目。","cover":"images/sai-kiran-anagani-555972-unsplash.jpg","link":"powerful-git.html","preview":"\u003cp\u003e你可以用git撤回任何操作!\u003c/p\u003e\n","title":"Git的高级玩法——花式撤回误操作"},{"content":"\n# 问题\n最近做的一个项目里用到了`SwipeRefreshLayout`，布局大概是这样的：\n```\n\u003candroid.support.v4.widget.SwipeRefreshLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\u003e\n    \u003cScrollView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:padding=\"16dp\"\u003e\n    \u003cRelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\u003e\n        \u003cTextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\" /\u003e\n    \u003c/RelativeLayout\u003e\n    \u003c/ScrollView\u003e\n\u003c/android.support.v4.widget.SwipeRefreshLayout\u003e\n```\n但是！下拉时啥都没有显示，根据Debugger显示，`OnRefresh`方法**几乎**也不被调用。  \n这TM就很闹心了。。。各种调试无果，只好求助度娘。\n# 解决\n网上的解决方法也是种类繁多。。。总的来说有这几种：  \n1. 用`ScrollView`或者`ListView`作为`SwipeRefreshLayout`的子控件。  \n2. 导入了两个不同版本`android.support.v4`支持包，用`resolutionStrategy`强制指定版本。([原文章在这里](https://www.jianshu.com/p/2a1897fdc041))  \n3. 给子布局设置`onTouchEvent`，屏蔽事件。  \n***\n前两种压根没遇到。。。所以果断选择第3种，嘿，还真有效！  \n[原文章](http://blog.csdn.net/u013673799/article/details/70755747)里是这么说的:  \n\u003cblockquote\u003e\n当使用ListView，下拉刷新时，`SwipeRefreshLayout`的down事件被子View消费了，当Move时，才会调用自身的`onTouchEvent`方法。  \n而不使用ListView，显示`TextView`时，`SwipeRefreshLayout`的down事件没有被子View消费，需要调用自己的`onTouchEvent`方法 。这个就是导致问题的原因。   \n根据上面的原因，可以有一种解决方式，如下:  \n```\nmTextView.setOnTouchListener(new View.OnTouchListener() {\n    @Override\n    public boolean onTouch(View v, MotionEvent event) {\n        if(event.getAction() == MotionEvent.ACTION_DOWN){\n            return true;\n        }\n        return false;\n    }\n});\n```\n\u003c/blockquote\u003e  \n於是这个问题就解决了。。。浪费了我半个小时的时间QAQ\n","cover":"","link":"swiperefreshlayout-fucked-problem.html","preview":"\u003cp\u003eSwipeRefreshLayout坑真tm多\u003c/p\u003e\n","title":"SwipeRefreshLayout下拉不显示进度圈"},{"content":"\n# 废话\n新年要到了...在这里祝各位新年快乐，顺便分享一堆干货  \n这里参考了[bjzhou/Coolapk-kotlin这个项目](https://github.com/bjzhou/Coolapk-kotlin)，看起来似乎是官方人员做的，非常感谢！  \n（虽然整理了两天时间...但是一想到可以实现写酷安第三方版的愿望就激动得要she的说）\n# API 说明\n_前排提示：该 API 由于用到了 native 代码，只能在 Linux i686 或者 Android ARM/x86 平台上使用 !_   \n  \n所有接口使用统一的前缀： https://api.coolapk.com/v6/  \n所有接口使用统一的 HTTP 头（有特殊说明的除外）：\n```\nUser-Agent: Dalvik/2.1.0 (Linux; U; Android 5.1.1; Nexus 4 Build/LMY48T) (#Build; google; Nexus 4; LMY48T; 5.1.1) +CoolMarket/7.3\nX-Requested-With: XMLHttpRequest\nX-Sdk-Int: 22\nX-Sdk-Locale: zh-CN\nX-App-Id: coolmarket\nX-App-Token: [见下面方法]\nX-App-Version: 7.3\nX-App-Code: 1701135\nX-Api-Version: 7\n```\n对于X-App-Token，首先你需要从酷安7.x中获得 so 文件，这里提供一个[下载链接](uploads/jniLibs.zip).  \n然后，把它放在你的项目中，这里提供一个例子：![Android Studio在这里放文件夹](images/android_studio_so.png)\n接着，新建文件：\n```\n//:AuthUtils.java\n//这里的包名不可随意更改！\npackage com.coolapk.market.util;\nimport android.content.Context;\npublic class AuthUtils {\n    static {\n        System.loadLibrary(\"a\");\n    }\n\n    /**\n     * @param paramContext Application上下文\n     * @param paramString 一个UUID\n     * @return 用于请求的Token\n     */\n    @SuppressWarnings(\"JniMissingFunction\")\n    public static native String getAS(Context application, String uuid);\n}\n```\n获取Token，调用`AuthUtils.getAS(getApplication(),UUID.randomUUID().toString())`就行了。  \n**需要注意的是**，这个so库为了防止盗用API，调用了`application.getPackageName()`方法，并将它与`com.coolapk.market`作比较，如果不同则返回null。  \n因此，我们需要\"欺骗\"它，这里写了一个`ApplicationProxy`来解决这个问题：  \n```\npackage ml.w568w.coolapksdk.util;\n\nimport android.app.Application;\nimport android.content.BroadcastReceiver;\nimport android.content.ComponentName;\nimport android.content.ContentResolver;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.IntentFilter;\nimport android.content.ServiceConnection;\nimport android.content.SharedPreferences;\nimport android.content.pm.PackageManager;\nimport android.content.res.AssetManager;\nimport android.content.res.Configuration;\nimport android.content.res.Resources;\nimport android.database.sqlite.SQLiteDatabase;\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.Drawable;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.os.Looper;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.lang.ref.SoftReference;\n\n/**\n * Created by w568w on 17-12-29.\n * Fuck the coolapk packageName to pretend as the truly Coolapk App against native methods.\n */\n\npublic class ApplicationProxy extends Application {\n    SoftReference\u003cApplication\u003e mTrulyapp;\n\n    public ApplicationProxy(Application trulyApp) {\n        super();\n        mTrulyapp = new SoftReference\u003c\u003e(trulyApp);\n    }\n\n    @Override\n    public String getPackageName() {\n        return \"com.coolapk.market\";\n    }\n\n    @Override\n    public void onCreate() {\n        mTrulyapp.get().onCreate();\n    }\n\n    @Override\n    public void onTerminate() {\n        mTrulyapp.get().onTerminate();\n    }\n\n    @Override\n    public void onConfigurationChanged(Configuration newConfig) {\n        mTrulyapp.get().onConfigurationChanged(newConfig);\n    }\n\n    @Override\n    public void onLowMemory() {\n        mTrulyapp.get().onLowMemory();\n    }\n\n    @Override\n    public Context getBaseContext() {\n        return mTrulyapp.get().getBaseContext();\n    }\n\n    @Override\n    public AssetManager getAssets() {\n        return mTrulyapp.get().getAssets();\n    }\n\n    @Override\n    public Resources getResources() {\n        return mTrulyapp.get().getResources();\n    }\n\n    @Override\n    public PackageManager getPackageManager() {\n        return mTrulyapp.get().getPackageManager();\n    }\n\n    @Override\n    public ContentResolver getContentResolver() {\n        return mTrulyapp.get().getContentResolver();\n    }\n\n    @Override\n    public Looper getMainLooper() {\n        return mTrulyapp.get().getMainLooper();\n    }\n\n    @Override\n    public Context getApplicationContext() {\n        return mTrulyapp.get().getApplicationContext();\n    }\n\n    @Override\n    public Resources.Theme getTheme() {\n        return mTrulyapp.get().getTheme();\n    }\n\n    @Override\n    public void setTheme(int resid) {\n        mTrulyapp.get().setTheme(resid);\n    }\n\n    @Override\n    public ClassLoader getClassLoader() {\n        return mTrulyapp.get().getClassLoader();\n    }\n\n\n    @Override\n    public String getPackageResourcePath() {\n        return mTrulyapp.get().getPackageResourcePath();\n    }\n\n    @Override\n    public String getPackageCodePath() {\n        return mTrulyapp.get().getPackageCodePath();\n    }\n\n    @Override\n    public SharedPreferences getSharedPreferences(String name, int mode) {\n        return mTrulyapp.get().getSharedPreferences(name, mode);\n    }\n\n    @Override\n    public FileInputStream openFileInput(String name) throws FileNotFoundException {\n        return mTrulyapp.get().openFileInput(name);\n    }\n\n    @Override\n    public FileOutputStream openFileOutput(String name, int mode) throws FileNotFoundException {\n        return mTrulyapp.get().openFileOutput(name, mode);\n    }\n\n    @Override\n    public boolean deleteFile(String name) {\n        return mTrulyapp.get().deleteFile(name);\n    }\n\n    @Override\n    public File getFileStreamPath(String name) {\n        return mTrulyapp.get().getFileStreamPath(name);\n    }\n\n    @Override\n    public String[] fileList() {\n        return mTrulyapp.get().fileList();\n    }\n\n    @Override\n    public File getFilesDir() {\n        return mTrulyapp.get().getFilesDir();\n    }\n\n    @Override\n    public File getCacheDir() {\n        return mTrulyapp.get().getCacheDir();\n    }\n\n\n    @Override\n    public File getDir(String name, int mode) {\n        return mTrulyapp.get().getDir(name, mode);\n    }\n\n    @Override\n    public SQLiteDatabase openOrCreateDatabase(String name, int mode, SQLiteDatabase.CursorFactory factory) {\n        return mTrulyapp.get().openOrCreateDatabase(name, mode, factory);\n    }\n\n\n    @Override\n    public boolean deleteDatabase(String name) {\n        return mTrulyapp.get().deleteDatabase(name);\n    }\n\n    @Override\n    public File getDatabasePath(String name) {\n        return mTrulyapp.get().getDatabasePath(name);\n    }\n\n    @Override\n    public String[] databaseList() {\n        return mTrulyapp.get().databaseList();\n    }\n\n    @Override\n    public Drawable getWallpaper() {\n        return mTrulyapp.get().getWallpaper();\n    }\n\n    @Override\n    public void setWallpaper(InputStream data) throws IOException {\n        mTrulyapp.get().setWallpaper(data);\n    }\n\n    @Override\n    public Drawable peekWallpaper() {\n        return mTrulyapp.get().peekWallpaper();\n    }\n\n    @Override\n    public int getWallpaperDesiredMinimumWidth() {\n        return mTrulyapp.get().getWallpaperDesiredMinimumWidth();\n    }\n\n    @Override\n    public int getWallpaperDesiredMinimumHeight() {\n        return mTrulyapp.get().getWallpaperDesiredMinimumHeight();\n    }\n\n    @Override\n    public void setWallpaper(Bitmap bitmap) throws IOException {\n        mTrulyapp.get().setWallpaper(bitmap);\n    }\n\n    @Override\n    public void clearWallpaper() throws IOException {\n        mTrulyapp.get().clearWallpaper();\n    }\n\n    @Override\n    public void startActivity(Intent intent) {\n        mTrulyapp.get().startActivity(intent);\n    }\n\n    @Override\n    public void sendBroadcast(Intent intent) {\n        mTrulyapp.get().sendBroadcast(intent);\n    }\n\n    @Override\n    public void sendBroadcast(Intent intent, String receiverPermission) {\n        mTrulyapp.get().sendBroadcast(intent, receiverPermission);\n    }\n\n    @Override\n    public void sendOrderedBroadcast(Intent intent, String receiverPermission) {\n        mTrulyapp.get().sendOrderedBroadcast(intent, receiverPermission);\n    }\n\n    @Override\n    public void sendOrderedBroadcast(Intent intent, String receiverPermission, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras) {\n        mTrulyapp.get().sendOrderedBroadcast(intent, receiverPermission, resultReceiver, scheduler, initialCode, initialData, initialExtras);\n    }\n\n    @Override\n    public void sendStickyBroadcast(Intent intent) {\n        mTrulyapp.get().sendStickyBroadcast(intent);\n    }\n\n    @Override\n    public Intent registerReceiver(BroadcastReceiver receiver, IntentFilter filter) {\n        return mTrulyapp.get().registerReceiver(receiver, filter);\n    }\n\n    @Override\n    public Intent registerReceiver(BroadcastReceiver receiver, IntentFilter filter, String broadcastPermission, Handler scheduler) {\n        return mTrulyapp.get().registerReceiver(receiver, filter, broadcastPermission, scheduler);\n    }\n\n    @Override\n    public void unregisterReceiver(BroadcastReceiver receiver) {\n        mTrulyapp.get().unregisterReceiver(receiver);\n    }\n\n    @Override\n    public ComponentName startService(Intent service) {\n        return mTrulyapp.get().startService(service);\n    }\n\n    @Override\n    public boolean stopService(Intent name) {\n        return mTrulyapp.get().stopService(name);\n    }\n\n    @Override\n    public boolean bindService(Intent service, ServiceConnection conn, int flags) {\n        return mTrulyapp.get().bindService(service, conn, flags);\n    }\n\n    @Override\n    public void unbindService(ServiceConnection conn) {\n        mTrulyapp.get().unbindService(conn);\n    }\n\n    @Override\n    public boolean startInstrumentation(ComponentName className, String profileFile, Bundle arguments) {\n        return mTrulyapp.get().startInstrumentation(className, profileFile, arguments);\n    }\n\n    @Override\n    public Object getSystemService(String name) {\n        return mTrulyapp.get().getSystemService(name);\n    }\n\n    @Override\n    public int checkPermission(String permission, int pid, int uid) {\n        return mTrulyapp.get().checkPermission(permission, pid, uid);\n    }\n\n    @Override\n    public int checkCallingPermission(String permission) {\n        return mTrulyapp.get().checkCallingPermission(permission);\n    }\n\n    @Override\n    public int checkCallingOrSelfPermission(String permission) {\n        return mTrulyapp.get().checkCallingOrSelfPermission(permission);\n    }\n\n\n    @Override\n    public void enforcePermission(String permission, int pid, int uid, String message) {\n        mTrulyapp.get().enforcePermission(permission, pid, uid, message);\n    }\n\n    @Override\n    public void enforceCallingPermission(String permission, String message) {\n        mTrulyapp.get().enforceCallingPermission(permission, message);\n    }\n\n    @Override\n    public void enforceCallingOrSelfPermission(String permission, String message) {\n        mTrulyapp.get().enforceCallingOrSelfPermission(permission, message);\n    }\n\n    @Override\n    public void grantUriPermission(String toPackage, Uri uri, int modeFlags) {\n        mTrulyapp.get().grantUriPermission(toPackage, uri, modeFlags);\n    }\n\n    @Override\n    public void revokeUriPermission(Uri uri, int modeFlags) {\n        mTrulyapp.get().revokeUriPermission(uri, modeFlags);\n    }\n\n    @Override\n    public int checkUriPermission(Uri uri, int pid, int uid, int modeFlags) {\n        return mTrulyapp.get().checkUriPermission(uri, pid, uid, modeFlags);\n    }\n\n    @Override\n    public int checkCallingUriPermission(Uri uri, int modeFlags) {\n        return mTrulyapp.get().checkCallingUriPermission(uri, modeFlags);\n    }\n\n    @Override\n    public int checkCallingOrSelfUriPermission(Uri uri, int modeFlags) {\n        return mTrulyapp.get().checkCallingOrSelfUriPermission(uri, modeFlags);\n    }\n\n    @Override\n    public int checkUriPermission(Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags) {\n        return mTrulyapp.get().checkUriPermission(uri, readPermission, writePermission, pid, uid, modeFlags);\n    }\n\n    @Override\n    public void enforceUriPermission(Uri uri, int pid, int uid, int modeFlags, String message) {\n        mTrulyapp.get().enforceUriPermission(uri, pid, uid, modeFlags, message);\n    }\n\n    @Override\n    public void enforceCallingUriPermission(Uri uri, int modeFlags, String message) {\n        mTrulyapp.get().enforceCallingUriPermission(uri, modeFlags, message);\n    }\n\n    @Override\n    public void enforceCallingOrSelfUriPermission(Uri uri, int modeFlags, String message) {\n        mTrulyapp.get().enforceCallingOrSelfUriPermission(uri, modeFlags, message);\n    }\n\n    @Override\n    public void enforceUriPermission(Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags, String message) {\n        mTrulyapp.get().enforceUriPermission(uri, readPermission, writePermission, pid, uid, modeFlags, message);\n    }\n\n    @Override\n    public Context createPackageContext(String packageName, int flags) throws PackageManager.NameNotFoundException {\n        return mTrulyapp.get().createPackageContext(packageName, flags);\n    }\n\n\n}\n\n```\n然后调用`AuthUtils.getAS(new ApplicationProxy(application), UUID.randomUUID().toString())`就没有问题了。  \n# API List\n## 获得指定用户信息\n未完待续...~~(其实是博主懒得写)~~  \n如果你等不及要试用一下酷安的api，请[关注这个项目](https://github.com/w568w/CoolapkSDK)\n\n\n\n\n\n\n\n\n\n","cover":"","link":"research-on-coolapk-api.html","preview":"\u003cp\u003e祝各位新年快乐！\u003c/p\u003e\n","title":"酷安API的相关研究和整理"},{"content":"\n# 引子\n在写净眼(一个Xposed模块)时，遇到一个问题，App本体的设置参数如何传给Hook类？  \n之前我一直用的是文件读写的方式，但在调试中我发现：如果被Hook的应用本身无此权限，那么就无法读到这个文件。  \n经过多次(两三个小时而已)的查找，找到了一个解决方案。  \n# XSharedPreferences\nXSharedPreferences是XposedBridge的一部分。它可以读取任意应用的SharedPreferences。  \n於是就可以在App本体中写入SharedPreferences，然后从Hook类中读取...  \n程序本体中：  \n```\n        SharedPreferences mSharedPreferences = getSharedPreferences(\"data\", Context.MODE_WORLD_READABLE);\n        data.edit().putString(\"test\",\"something\");\n```\nXposed Hook类中：  \n```\n        XSharedPreferences xSP=new XSharedPreferences(\"ml.w568w.test\",\"data\");\n        xSP.reload();\n        xSP.makeWorldReadable();\n        String test = xSP.getString(\"test\", \"\");\n```\n# 注意\n1. **必须**使用`Context.MODE_WORLD_READABLE`得到的`SharedPreferences`，`makeWorldReadable()`并不能让你可以随意限定`SharedPreferences`的读取权限。  \n2. 尽可能地不使用`PreferenceManager.getDefaultSharedPreferences(this);`或者`PreferenceActivity`得到的`SharedPreferences`（我在这里被坑了好久...）  \n3. 即便这么做，获得的`XSharedPreferences`仍然是只读的...因此，Hook类依旧不能向模块本体传递信息...\n","cover":"","link":"a-tiring-xposed-problem.html","preview":"\u003cp\u003eXposed是无底的巨坑\u003c/p\u003e\n","title":"Xposed模块本体向Hook类传递信息的研究"},{"content":"\n![Photo by Brett Ritchie on Unsplash](images/brett-ritchie-550788-unsplash.jpg)\n# This is w568w.\n一个热衷于Android开发的高中生，Life is short , I choose Geek.\n# 你的博客呢？  \nemmm，美国最大主机提供商倒闭了  \n王八蛋王八蛋主机商吃喝嫖赌吃喝嫖赌  \n欠下了欠下了3.5亿  \n带着我的网站和数据库跑了  \n我们没有没有没有办法办法  \n用GitHub Pages临时临时搭个站点   \n原价都是100多 200多 300多的站点 统统20块  \n20块20块统统20块 统统统统统统20块   \n我们辛辛苦苦写了 辛辛苦苦给你给你写了大半年  \n你你你不给不给备份 你还我还我血汗钱  \n还我血汗钱!\\_(:зゝ∠)\\_  \n \n  \n咳咳，不胡闹了。简单地说，我的主机商OpenShift最近对系统进行了一次全面升级，所有原有的网站都需要进行升级手续，逾期将清空网站数据。然而我并没有注意到这则通知，于是就悲催了。。。\n# 所以最近在干啥？\n学习啊，学习使我快樂。  \n如果有时间的话，可能还会进行  \n* 一些对APP简单的填坑  \n* 筹备新博客  \n* 挖新坑  \n# 怎么找到你捏？\n还是老法子  \n企鹅号：1278297578  \n百度号：1278297578  \nGitHub：@w568w   \nEmail：1278297578(at)qq.com   \n# 友情链接\n只是做个备忘~~  \n[聞道博客](http://wendao123.cn/)\n[853](http://blog.853lab.com/)\n","cover":"images/brett-ritchie-550788-unsplash.jpg","link":"myself.html","preview":"\u003cp\u003e新的博客，新的開始\u003c/p\u003e\n","title":"我與世界"}]